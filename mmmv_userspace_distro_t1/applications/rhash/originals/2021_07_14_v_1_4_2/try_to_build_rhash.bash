#!/usr/bin/env bash
#==========================================================================
# Initial author of this file: Martin.Vahi@softf1.com
# This file is in public domain.
# The following line is a spdx.org license label line:
# SPDX-License-Identifier: 0BSD
#
# Tested on ("uname -a")
# Linux hoidla01 4.19.0-17-amd64 #1 SMP Debian 4.19.194-3 (2021-07-18) x86_64 GNU/Linux
#==========================================================================
S_FP_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
S_FP_ORIG="`pwd`"
S_TIMESTAMP="`date +%Y`_`date +%m`_`date +%d`_T_`date +%H`h_`date +%M`min_`date +%S`s"
#--------------------------------------------------------------------------
func_mmmv_wait_and_sync_t1(){
    wait # for background processes started by this Bash script to exit/finish
    sync # network drives, USB-sticks, etc.
    wait # for sync
} # func_mmmv_wait_and_sync_t1
#--------------------------------------------------------------------------
func_mmmv_exit_if_not_on_path_t2b() { # S_COMMAND_NAME
    local S_COMMAND_NAME="$1"
    #----------------------------------------------------------------------
    local S_LOCAL_VARIABLE="`which $S_COMMAND_NAME 2>/dev/null`"
    if [ "$S_LOCAL_VARIABLE" == "" ]; then
        echo ""
        echo -e "\e[31mCommand \"$S_COMMAND_NAME\" could not be found from the PATH. \e[39m"
        echo "The execution of this Bash script is aborted."
        echo "GUID=='0fc6984f-930c-46dc-b4eb-5292703196e7'"
        echo ""
        cd "$S_FP_ORIG"
        exit 1;
    fi
} # func_mmmv_exit_if_not_on_path_t2b
#--------------------------------------------------------------------------
func_mmmv_assert_error_code_zero_t1(){
    local S_ERR_CODE="$1" # the "$?"
    local S_GUID_CANDIDATE="$2"
    #----------------------------------------------------------------------
    if [ "$S_GUID_CANDIDATE" == "" ]; then
        echo ""
        echo -e "\e[31mThe Bash code that calls this function is flawed. \e[39m"
        echo ""
        echo "    S_GUID_CANDIDATE==\"\""
        echo ""
        echo "but it is expected to be a GUID."
        echo "Aborting script."
        echo "GUID=='3cbf5c48-a2ac-439d-a1eb-5292703196e7'"
        echo "S_GUID_CANDIDATE=='$S_GUID_CANDIDATE'"
        echo ""
        #--------
        cd "$S_FP_ORIG"
        exit 1
    fi
    #------------------------------
    # If the "$?" were evaluated in this function, 
    # then it would be "0" even, if it is
    # something else at the calling code.
    if [ "$S_ERR_CODE" != "0" ];then
        echo ""
        echo "Something went wrong. Error code: $S_ERR_CODE"
        echo -e "\e[31mAborting script. \e[39m"
        echo "GUID=='7b246a32-da7c-4ff5-b1eb-5292703196e7'"
        echo "S_GUID_CANDIDATE=='$S_GUID_CANDIDATE'"
        echo ""
        #--------
        cd "$S_FP_ORIG"
        exit 1
    fi
    #------------------------------
} # func_mmmv_assert_error_code_zero_t1
#--------------------------------------------------------------------------
func_mmmv_exit_if_not_on_path_t2b "clang"
func_mmmv_exit_if_not_on_path_t2b "clang++"
func_mmmv_exit_if_not_on_path_t2b "make"
func_mmmv_exit_if_not_on_path_t2b "tar"
func_mmmv_exit_if_not_on_path_t2b "gunzip"
#--------------------------------------------------------------------------
S_CMD_NICE=" nice -n 14 "
S_FP_BUILD_FOLDER="to_be_initialised"
func_init_build_folder(){
    #--------------------
    local S_FP_ORIG_TMP="`pwd`"
    #--------------------
    local S_TMP_0="_build_folder"
    local S_TMP_1="$S_TIMESTAMP$S_TMP_0"
    local S_TMP_2="tmp_autogenerated_by_rhash_build_script/$S_TMP_1"
    #--------------------
    S_TMP_0="$HOME/tmp_"
    S_TMP_1="$HOME/tmp"
    local S_FP_TMP="/tmp"
    if [ -e "$S_TMP_1" ]; then
        if [ -d "$S_TMP_1" ]; then
            S_FP_TMP="$S_TMP_1"
        fi
    fi
    if [ -e "$S_TMP_0" ]; then
        if [ -d "$S_TMP_0" ]; then
            S_FP_TMP="$S_TMP_0"
        fi
    fi
    S_FP_BUILD_FOLDER="$S_FP_TMP/$S_TMP_2"
    #--------------------
    mkdir -p $S_FP_BUILD_FOLDER
    func_mmmv_assert_error_code_zero_t1 "$?" \
        "4b710342-7f57-4f5e-b4eb-5292703196e7"
    func_mmmv_wait_and_sync_t1
    #--------------------
    local S_FN_SRC_TAR="rhash-1.4.2-src.tar"
    S_TMP_0=".gz"
    local S_FN_SRC_TAR_GZ="$S_FN_SRC_TAR$S_TMP_0"
    #--------------------
    cp $S_FP_DIR/$S_FN_SRC_TAR_GZ $S_FP_BUILD_FOLDER/
    func_mmmv_assert_error_code_zero_t1 "$?" \
        "2d7a9233-b28f-47dd-94eb-5292703196e7"
    func_mmmv_wait_and_sync_t1
    #--------------------
    cd "$S_FP_BUILD_FOLDER"
    func_mmmv_assert_error_code_zero_t1 "$?" \
        "70e9361b-112e-4d0b-85eb-5292703196e7"
    #--------------------
        $S_CMD_NICE gunzip ./$S_FN_SRC_TAR_GZ
        func_mmmv_assert_error_code_zero_t1 "$?" \
            "25baa92a-b8c5-4719-a4eb-5292703196e7"
        func_mmmv_wait_and_sync_t1
        $S_CMD_NICE tar -xf $S_FN_SRC_TAR
        func_mmmv_assert_error_code_zero_t1 "$?" \
            "0530c043-ddcb-4507-beeb-5292703196e7"
        func_mmmv_wait_and_sync_t1
    #--------------------
    cd "$S_FP_ORIG_TMP"
    func_mmmv_assert_error_code_zero_t1 "$?" \
        "1577e830-556e-4b85-a2eb-5292703196e7"
    #--------------------
} # func_init_build_folder
#--------------------------------------------------------------------------
func_init_build_folder_stage_2(){
    func_init_build_folder
    cd "$S_FP_BUILD_FOLDER/RHash-1.4.2"
    func_mmmv_assert_error_code_zero_t1 "$?" \
        "861fd625-17fd-4c1d-83eb-5292703196e7"
} # func_init_build_folder_stage_2
#--------------------------------------------------------------------------
func_make_test_and_make_install(){
    #--------------------
    $S_CMD_NICE make test 
    func_mmmv_assert_error_code_zero_t1 "$?" \
        "390c8995-6d15-4405-84eb-5292703196e7"
    func_mmmv_wait_and_sync_t1
    #--------------------
    $S_CMD_NICE make install
    func_mmmv_assert_error_code_zero_t1 "$?" \
        "17425a64-965c-48c1-a1eb-5292703196e7"
    func_mmmv_wait_and_sync_t1
    #--------------------
} # func_make_test_and_make_install
#--------------------------------------------------------------------------
export CFLAGS=" -march=native -ftree-vectorize -O3 "
#export CFLAGS=" -mtune=native -ftree-vectorize -O3 "
export CXXFLAGS="$CFLAGS"
S_ARGV_0="$1"
SI_NUMBER_OF_THREADS="2"

S_FP_INSTALLATION_FOLDER="`cd $S_FP_DIR/../v_1_4_2 ; pwd `"
if [ "$S_ARGV_0" == "c" ]; then
    #--------------------
    func_init_build_folder_stage_2
    CC="clang" CXX="clang++" $S_CMD_NICE ./configure \
        --prefix=$S_FP_INSTALLATION_FOLDER \
        --cc=clang \
        --enable-gettext \
        --enable-static \
        --extra-cflags="$CFLAGS"
    func_mmmv_assert_error_code_zero_t1 "$?" \
        "f97eed21-10f6-4459-9eeb-5292703196e7"
    func_mmmv_wait_and_sync_t1
    #--------------------
    CC="clang" CXX="clang++" $S_CMD_NICE make -j $SI_NUMBER_OF_THREADS
    func_mmmv_assert_error_code_zero_t1 "$?" \
        "8a3eed4c-034e-49e6-82eb-5292703196e7"
    func_mmmv_wait_and_sync_t1
    #--------------------
    func_make_test_and_make_install
    #--------------------
else
    if [ "$S_ARGV_0" == "g" ]; then
        #--------------------
        func_init_build_folder_stage_2
        CC="gcc" CXX="g++" $S_CMD_NICE ./configure \
            --prefix=$S_FP_INSTALLATION_FOLDER \
            --enable-gettext \
            --enable-static \
            --extra-cflags="$CFLAGS"
        func_mmmv_assert_error_code_zero_t1 "$?" \
            "504c375f-0db5-4b85-a5eb-5292703196e7"
        func_mmmv_wait_and_sync_t1
        #--------------------
        CC="gcc" CXX="g++" $S_CMD_NICE make -j $SI_NUMBER_OF_THREADS
        func_mmmv_assert_error_code_zero_t1 "$?" \
            "c4d1c54c-e6c9-44f6-94eb-5292703196e7"
        func_mmmv_wait_and_sync_t1
        #--------------------
        func_make_test_and_make_install
        #--------------------
    else
        echo ""
        echo "COMMAND_LINE_ARGUMENTS :== BUILD_WITH_GCC | BUILD_WITH_CLANG "
        echo -e "   BUILD_WITH_CLANG :== '\e[33mc\e[39m'"
        echo -e "     BUILD_WITH_GCC :== '\e[33mg\e[39m'"
        echo "GUID=='2103c759-694c-429d-b4eb-5292703196e7'"
        echo ""
    fi
fi
#--------------------------------------------------------------------------
# S_VERSION_OF_THIS_FILE="a709187c-2d0f-4664-84eb-5292703196e7"
#==========================================================================
