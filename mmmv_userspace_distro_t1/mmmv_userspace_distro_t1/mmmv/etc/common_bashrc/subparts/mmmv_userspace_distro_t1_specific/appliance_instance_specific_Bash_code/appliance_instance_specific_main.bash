#!/usr/bin/env bash
#==========================================================================
# Initial author of this file: Martin.Vahi@softf1.com
# This file is in public domain.
#
# The following line is a spdx.org license label line:
# SPDX-License-Identifier: 0BSD
#==========================================================================
S_FP_DIR_TMP_0="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" 
if [ "$MMMV_USERSPACE_DISTRO_T1_HOME" == "" ]; then
    MMMV_USERSPACE_DISTRO_T1_HOME="`cd $S_FP_DIR_TMP_0/../../../../../../; pwd`"
fi
#--------------------------------------------------------------------------
if [ "$MMMV_USERSPACE_DISTRO_T1_BASHRC_PREFIX_LOAD_MODE_T1" != "mode_ok_to_load" ]; then
    S_ERR_CODE="1"
    echo ""
    echo "This script is expected to be a sub-part of the "
    #--------------------
    echo "$MMMV_USERSPACE_DISTRO_T1_HOME/mmmv/etc/common_bashrc/common_bashrc_main.bash"
    #--------------------
    if [ "$MMMV_USERSPACE_DISTRO_T1_BASHRC_PREFIX_LOAD_MODE_T1" != "" ]; then
        echo ""
        echo "    MMMV_USERSPACE_DISTRO_T1_BASHRC_PREFIX_LOAD_MODE_T1==$MMMV_USERSPACE_DISTRO_T1_BASHRC_PREFIX_LOAD_MODE_T1"
        echo ""
    fi
    echo -e "\e[31mExiting with an error code $S_ERR_CODE . \e[39m"
    echo "GUID=='576c175d-0679-4b9e-85e7-615351d137e7'"
    echo ""
    exit $S_ERR_CODE # exit with an error
fi
#--------------------------------------------------------------------------
S_FP_APPLICATIONS="`cd $MMMV_USERSPACE_DISTRO_T1_HOME/../; pwd`/applications"
#--------------------------------------------------------------------------
if [ "$MMMV_USERSPACE_DISTRO_T1_APPLIANCE_INSTANCE_SPECIFIC_MAIN_BASH_TIMESTAMP" == "$S_TIMESTAMP" ]; then
    # This Bash file should be run exactly once per session and this if-clause
    # aims to detect multiple runs of this Bash file.
    S_FP_TMP_0="${BASH_SOURCE[0]}"
    if [ "$SB_DISPLAY_VERIFICATION_FAILURE_MESSAGE_DEFAULT" != "f" ]; then
        echo ""
        echo -e "\e[31m Some mmmv_userspace_distro_t1 Bash code is flawed. \e[39m"
        echo "The Bash file that outputs this error message "
        echo ""
        echo "    $S_FP_TMP_0"
        echo ""
        echo "is expected to be run only once per session. "
        echo "GUID=='a95ffd4a-ad51-49db-85e7-615351d137e7'"
        echo ""
    fi
else
    MMMV_USERSPACE_DISTRO_T1_APPLIANCE_INSTANCE_SPECIFIC_MAIN_BASH_TIMESTAMP="$S_TIMESTAMP"
fi
#--------------------------------------------------------------------------
# Sample code for copy-pasting:
# alias angervaks_cp_someplace="printf ' $HOME/destination/folder/ '  | xargs cp   "
#--------------------------------------------------------------------------
if [ "$SB_OPERATINGSYSTEM_LINUX_ANDROID_TERMUX" == "t" ]; then
    if [ "$HOSTNAME" == "localhost" ]; then
    #----------------------------------------------------------------------
        S_FP_0="`cd $MMMV_USERSPACE_DISTRO_T1_HOME/../; pwd`/applications/declare_applications.bash"
        #func_mmmv_userspace_distro_t1_specific_Bash_file_inclusion_t1 "$S_FP_0"
        #------------------------------------------------------------------
        S_TMP_0="/sdcard/Martin"
        SB_OPTIONAL_DISPLAY_ERROR_MESSAGE_IF_FOLDER_MISSING="f"
        func_mmmv_userspace_distro_t1_declare_alias_cd_t1 \
            "mmmv_go_Martin" "$S_TMP_0" \
            "179a5e13-b4ea-48b1-b4e7-615351d137e7" \
            "$SB_OPTIONAL_DISPLAY_ERROR_MESSAGE_IF_FOLDER_MISSING"
        #------------------------------------------------------------------
        MMMV_USERSPACE_DISTRO_T1_HOSTNAME_SPECIFIC_INITIALISATIONS_TIMESTAMP="$S_TIMESTAMP"
        #------------------------------------------------------------------
    fi
    #----------------------------------------------------------------------
fi
#--------------------------------------------------------------------------
if [ "$HOSTNAME" == "hoidla01" ]; then
    #----------------------------------------------------------------------
    S_FP_BASHFILE="$MMMV_USERSPACE_DISTRO_T1_HOME/mmmv/etc/common_bashrc/subparts/mmmv_userspace_distro_t1_specific/appliance_instance_specific_Bash_code/autogenerated_by_adduser_cmd/Linux_Kanotix_Debian_v_4_19_132_1_autogenerated_bashrc.bash"
    SB_OK_4_THE_BASHFILE_2_BE_MISSING_OPTIONAL="f" # domain: {"","t","f"}
    func_mmmv_include_bashfile_if_possible_t2 "$S_FP_BASHFILE" \
        "43d9eb01-342d-4d32-91e7-615351d137e7" "$SB_OK_4_THE_BASHFILE_2_BE_MISSING_OPTIONAL"
    
    alias dmesg="sudo /bin/dmesg "
    alias hddtemp="sudo /usr/sbin/hddtemp "
    #----------------------------------------------------------------------
    # For security reasons some of the applications might be
    # compiled/installed by users other than the mmmv.  The 
    #
    #     func_mmmv_userspace_distro_t1_specific_Bash_file_inclusion_t1 
    #
    # has to be called for every user that is used for 
    # applications access control. 
    #----------------------------------------------------------------------
    S_FP_0="$S_FP_APPLICATIONS/declare_applications.bash"
    func_mmmv_userspace_distro_t1_specific_Bash_file_inclusion_t1 "$S_FP_0"

    S_FP_0="/home/mmmv_applications_set_01/applications/declare_applications.bash"
    func_mmmv_userspace_distro_t1_specific_Bash_file_inclusion_t1 "$S_FP_0"

    S_FP_0="/home/mmmv_applications_set_02/applications/declare_applications.bash"
    func_mmmv_userspace_distro_t1_specific_Bash_file_inclusion_t1 "$S_FP_0"

    S_FP_0="/home/mmmv_hoidla_01_rakendused/applications/declare_applications.bash"
    func_mmmv_userspace_distro_t1_specific_Bash_file_inclusion_t1 "$S_FP_0"
    MMMV_USERSPACE_DISTRO_T1_HOSTNAME_SPECIFIC_INITIALISATIONS_TIMESTAMP="$S_TIMESTAMP"
    #----------------------------------------------------------------------
    S_TMP_0="/home/librarian_01/salvestusseadmed/magnet_03_andmekollektsioon/warc_librarian/kollektsioon/data"
    if [ -e "$S_TMP_0" ]; then 
        alias mmmv_go_d3="cd $S_TMP_0"
        S_TMP_1="$S_TMP_0/unspecified_doc_collections/home_pages/Martin_Vahi_at_softf1_com/archive_softf1_com"
        if [ -e "$S_TMP_1" ]; then
            if [ -d "$S_TMP_1" ]; then
                alias mmmv_go_d3_archive_softf1_com="cd $S_TMP_0/unspecified_doc_collections/home_pages/Martin_Vahi_at_softf1_com/archive_softf1_com"
            fi
        fi

        alias mmmv_go_d1="cd /home/librarian_01/salvestusseadmed/magnet_01_indeksid/kasutajad/`whoami` "
        alias mmmv_go_d1a="cd /home/librarian_01/salvestusseadmed/magnet_01_indeksid/k8igile_kasutajatele_loetav/`whoami` "

        alias mmmv_find_d3_maxdepth_4_t1="cd $S_TMP_0 ; nice -n 15 find . -maxdepth 4 -name "
        alias mmmv_find_d3_maxdepth_6_t1="cd $S_TMP_0 ; nice -n 15 find . -maxdepth 6 -name "

        #alias mmmv_init_symlink_large_files_hdd_01="$S_TMP_1 \
        #    ln -s \
        #    /media/pi/Sinine230GiBUSB/suurte_failide_kataloogid/large_files/`whoami` \
        #    ~/large_files "
    else
        if [ "$SB_DISPLAY_VERIFICATION_FAILURE_MESSAGE_DEFAULT" != "f" ]; then
            echo ""
            echo "Kataloog "
            echo ""
            echo "    $S_TMP_0"
            echo ""
            echo "pole kättesaadav, mistõttu osad aliased jäid deklareerimata."
            echo "GUID=='b5cfd720-478f-4b9e-95e7-615351d137e7'"
            echo ""
        fi
    fi
    #----------------------------
    S_TMP_0="/home/librarian_01/salvestusseadmed/magnet_04_andmekollektsioon/kollektsioon/data"
    if [ -e "$S_TMP_0" ]; then 
        alias mmmv_go_d4="cd $S_TMP_0"
        alias mmmv_find_d4_maxdepth_4_t1="cd $S_TMP_0 ; nice -n15 find . -maxdepth 4 -name "
        alias mmmv_find_d4_maxdepth_6_t1="cd $S_TMP_0 ; nice -n15 find . -maxdepth 6 -name "
    else
        if [ "$SB_DISPLAY_VERIFICATION_FAILURE_MESSAGE_DEFAULT" != "f" ]; then
            echo ""
            echo "Kataloog "
            echo ""
            echo "    $S_TMP_0"
            echo ""
            echo "pole kättesaadav, mistõttu osad aliased jäid deklareerimata."
            echo "GUID=='1e85d2ae-110a-4108-a2e7-615351d137e7'"
            echo ""
        fi
    fi
    #----------------------------------------------------------------------
    alias mmmv_go_arhiiv_01="cd /home/librarian_01/salvestusseadmed/magnet_03_andmekollektsioon/warc_librarian/kollektsioon/data/unspecified_doc_collections/home_pages/Martin_Vahi_at_softf1_com/archive_softf1_com ;"
    #----------------------------------------------------------------------
    # The GCC is included with the Ada Community, but to link with 
    # the operating system standard package collection libraries, the 
    # operating system standard package collection GCC has to be used.
    export CC="/usr/bin/gcc"
    export CXX="/usr/bin/g++"
    Z_PATH="/usr/bin/gcc:$Z_PATH"
    Z_PATH="/usr/bin/g++:$Z_PATH"
    #----------------------------------------------------------------------
    Z_PATH="$MMMV_USERSPACE_DISTRO_T1_HOME/mmmv/bin_hostname_specific/hoidla01:$Z_PATH"
    #----------------------------------------------------------------------
fi
#--------------------------------------------------------------------------
# Some templates for copy-pasting:

# alias mmmv_dev_update_testing_copy_of_mmmv_devel_tools_GitHub_repository="S_TIMESTAMP_T1=\"\`mmmv_timestamp_t1.bash\`\" ; S_FP_00=\"\$HOME/Projektid/progremise_infrastruktuur/progremise_t66vahendid/mmmv_devel_tools/githubi_konto_mmmv_devel_tools/mmmv_devel_tools\" ; S_FP_0=\"\$HOME/m_local/lib/minu_enda_loomingu_vanad_versioonid/mmmv_devel_tools_GitHubis_publitseeritu_testkoopia\" ; S_FP_1=\"\$S_FP_0/old_copies/\$S_TIMESTAMP_T1\" ; S_FP_2=\"\$S_FP_0/mmmv_devel_tools\"; mkdir -p \"\$S_FP_1\" ; sync; wait;  if [ -e \"\$S_FP_2\" ]; then mv \"\$S_FP_2\" \"\$S_FP_1/\" ; fi ; sync; wait; cp -f -R \"\$S_FP_00\"  \"\$S_FP_0/\" ; sync; wait; "

#--------------------------------------------------------------------------
S_TMP_0="_home_mmmv_bashrc_subpart.bash"
S_FP_0="/home/mmmv/m_local/etc/$HOSTNAME$S_TMP_0" # does NOT need to exist
if [ -e "$S_FP_0" ]; then
    if [ ! -d "$S_FP_0" ]; then
        source "$S_FP_0"
    else
        # The 
        func_mmmv_verify_that_the_file_exists_but_do_not_exit_t1 \
            "$S_FP_0" \
            "29aaf7a1-c09d-44c5-85e7-615351d137e7" \
            "$SB_DISPLAY_VERIFICATION_FAILURE_MESSAGE_DEFAULT"
        # is here to conditionally display an error message.
    fi
else
    if [ "$SB_DISPLAY_VERIFICATION_FAILURE_MESSAGE_DEFAULT" == "t" ]; then
        if [ "$HOSTNAME" != "hoidla01" ]; then
            echo ""
            echo "Could not find an optioally used file "
            echo ""
            echo "    $S_FP_0"
            echo ""
            echo "You might find it useful for storing "
            echo "host specific general ~/.bashrc subpart code."
            echo "GUID=='135b3710-4a4c-4e0d-b4e7-615351d137e7'"
            echo ""
        fi
    fi
fi
#--------------------------------------------------------------------------
# S_VERSION_OF_THIS_FILE="98da3d10-4de8-4f0a-95e7-615351d137e7"
#==========================================================================
