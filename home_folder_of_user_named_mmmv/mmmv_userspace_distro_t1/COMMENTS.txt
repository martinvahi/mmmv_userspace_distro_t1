===========================================================================
=====================  mmmv_userspace_distro_t1  ==========================
===========================================================================

The mmmv_userspace_distro_t1 is a collection of manually installed
components and scripts. It's main purpose is to facilitate the
configuration of POSIX compliant operating system instances, for example
VirtualBox virtual appliances and Raspberry Pi memory card images.

WARNING:

    THERE IS NO EFFORT TO MAKE NEWER VERSIONS OF THE
    mmmv_userspace_distro_t1 TO BE BACKWARDS COMPATIBLE WITH OLDER
    VERSIONS OF THE mmmv_userspace_distro_t1. THERE IS NO EFFORT TO MAKE
    IT POSSIBLE TO USE MULTIPLE VERSIONS OF THE mmmv_userspace_distro_t1
    SIMULTANEOUSLY.

If the mmmv_userspace_distro_t1 is used, then it declares its version
at an environment variable named "MMMV_USERSPACE_DISTRO_T1_VERSION",
without the quotation marks.


---------------------------------------------------------------------------
                              Table of Contents
---------------------------------------------------------------------------

The "Section_..." at the start of the section name is meant to be
used for navigating this file with the Vim word search function.

Section_01: References to Linux Tutorials
Section_02: Basic Setup
Section_03: Basic Usage
Section_04: Temporary Environments
Section_05: Vim Related Setup
Section_06: Vim and vimwiki Related Workflow Ideas
Section_07: The Setup of Optional Components: Cache Server
Section_08: The Setup of Optional Components: User Specific Network Interface
Section_09: Some Networking Related Commands and Ideas
Section_10: Project Templates
Section_11: Bundled Development Tools
Section_12: The BSD License
Section_13: A BSD License Related note
Section_14: Open Source Cooperation Protocol
Section_15: Inspiring or Similar Projects Hall of Fame


---------------------------------------------------------------------------
                Section_01: References to Linux Tutorials
---------------------------------------------------------------------------

The rest of the chapters in this file assume basic knowledge of Bash
console and Unix like systems like Linux and BSD. A list of some
beginner level Linux tutorials:

    https://bash.cyberciti.biz/guide/Main_Page
    https://www.shell-tips.com/bash/
    optionally present local copy:
        /home/mmmv/mmmv_userspace_distro_t1/attic/documentation/third_party_documentation/Linux_and_Bash/2021_09_18_shell-tips_com_bash_comments_t1.pdf


---------------------------------------------------------------------------
                           Section_02: Basic Setup
---------------------------------------------------------------------------

Operating system users that use the mmmv_userspace_distro_t1
are expected to include ("source") the

    ./mmmv/etc/common_bashrc/common_bashrc_main.bash

to their

    ~/.bashrc

by adding a modified/updated version of

    #------machine--instance--specific--section--start-----

    export MMMV_USERSPACE_DISTRO_T1_HOME="<a path to the folder where this COMMENTS.txt resides that You are cuurently reading>
    # Usually the
    #     MMMV_USERSPACE_DISTRO_T1_HOME="/home/mmmv/mmmv_userspace_distro_t1"

    MMMV_FP_COMMON_BASHRC_MAIN="$MMMV_USERSPACE_DISTRO_T1_HOME/mmmv/etc/common_bashrc/common_bashrc_main.bash"

    if [ -e "$MMMV_FP_COMMON_BASHRC_MAIN" ]; then
        if [ ! -d "$MMMV_FP_COMMON_BASHRC_MAIN" ]; then
            alias mmmv_environment="SB_DISPLAY_VERIFICATION_FAILURE_MESSAGE_DEFAULT='t' ; source \"$MMMV_FP_COMMON_BASHRC_MAIN\" ; "
        fi
    fi
    #------machine--instance--specific--section--end-------

to their

    ~/.bashrc

The Bash alias with the inclusion ("source") line can be added to the
end of the ~/.bashrc automatically by executing

    ./mmmv/bin/mmmv_admin_init_bashrc_mmmv_t1.bash

which copies the

    ./mmmv/lib/templates/_bashrc_suffix_template_t1.bash

to the end of the ~/.bashrc . Operating system userspace distribution
creators may want to create an optional file

    /home/mmmv/m_local/etc/`hostname`_home_mmmv_bashrc_subpart.bash

by executing

    S_FP_ETC="/home/mmmv/m_local/etc"
    mkdir -p $S_FP_ETC
    cd $S_FP_ETC
    $MMMV_USERSPACE_DISTRO_T1_HOME/mmmv/bin/mmmv_cre_userspace_distro_t1_host_specific_bashrc_subpart_t1.bash

The folder $HOME/.mmmv and all of its contents is expected to be
autogenerated, id est manual edits at the ~/.mmmv subparts are expected
to be lost. The various warnings about the various programs missing from
PATH can be switched off for a specific user by first

    S_FP_ETC="$HOME/m_local/etc"
    mkdir -p $S_FP_ETC
    cd $S_FP_ETC
    mmmv_admin_cre_bashrc_optional_extra_00
    chmod -f -R 0700 ./*

and then editing the list of programs at the

    $S_FP_ETC/_bashrc_optional_extra_00_bash_subpart_01.rb

and then executing

   $MMMV_USERSPACE_DISTRO_T1_HOME/mmmv/lib/mmmv_devel_tools/2015_01_22_mmmv_devel_tools_without_JumpGUID_and_IDE_integration_v_02_with_UpGUID_bugfix/src/mmmv_devel_tools/GUID_trace/src/UpGUID/src/upguid  -f ./_bashrc_optional_extra_00.bash
   chmod 0700 ./_bashrc_optional_extra_00.bash

The optionally present files

    $HOME/m_local/etc/_bashrc_optional_extra_01
    $HOME/m_local/etc/_bashrc_optional_extra_01.bash

are included/"sourced" as subparts of the

    $MMMV_USERSPACE_DISTRO_T1_HOME/mmmv/etc/common_bashrc/common_bashrc_main.bash

If the "flatpak" is on PATH and the optional environment variable
S_FP_FLATPAK_JAILBREAK_FOLDER is defined, then on Linux the Bash alias
"mmmv_run_flatpak" is defined approximately like

    alias mmmv_run_flatpak="flatpak --user --filesystem=$S_FP_FLATPAK_JAILBREAK_FOLDER run "

Nonvolatile storage device wear can be reduced by creating a RAM
partition and defining an environment variable named

    MMMV_USERSPACE_DISTRO_T1_FP_RAM_PARTITION_64K

for holding the value of the RAM partition mounting point. The size
of that RAM partition should be at least 64KiB, but in some extreme
cases about 10KiB might also do. The warning that tells that the
MMMV_USERSPACE_DISTRO_T1_FP_RAM_PARTITION_64K has not been defined can
be disabled by outcommenting the Bash code that gives that warning.  The
code region, where the waring originates, can be found by recursively
searching for the GUID that is in the warning text.


---------------------------------------------------------------------------
                         Section_03: Basic Usage
---------------------------------------------------------------------------

mmmv_userspace_distro_t1 specific aliases and executables, usually
Bash scripts and Ruby scripts, start with the prefix of "mmmv_",
quotation marks excluded. The way to list the aliases and executables
on console is to type "mmmv_", without the quotation marks, and press
the tabulation key twice.  The aliases and binaries have been grouped to
sub-groups, which have a sub-group specific prefix. Some of the subgroup
prefixes are:

    mmmv_admin_

    mmmv_clipboard_text_2_ // Text from clipboard is read and the
                           // output of the program that processes the
                           // text from the clipboard is placed
                           // back to the clipboard, replacing
                           // the initial clipboard content.

    mmmv_cre_          // "cre" comes from the word "create"
    mmmv_devel_        // "devel" comes from the word "development"
    mmmv_filemanager_  // like the Midnight Commander, etc.
    mmmv_findgrep_t1_  // find <some parameters Foo> | grep <some parameters Bar>
    mmmv_fs_           // "fs" comes from the phrase "file system"
    mmmv_ls_           // "ls" comes from the Linux/BSD/Unix "ls" command
    mmmv_ls_doc_
    mmmv_se_           // "se" comes from the phrase "search engine"
    mmmv_ui_           // "ui" comes from the phrase "user interface"(UI)
    mmmv_webbrowser_   // includes Gemini and Gopher readers like the DilloPlus

The prefixes use the tree encoding, which is explained at a file that
MIGHT be available from the path of

    ./attic/documentation/art_of_software_development/2018_xx_xx_bitrary_softf1_com_Tree_Encoding_and_Type_Based_Prefixes_id_est_Hungarian_Notation_t1.pdf


---------------------------------------------------------------------------
                  Section_04: Temporary Environments
---------------------------------------------------------------------------

In the context of this chapter an environment is determined by
the values of the following environment variables:

* PATH
* LD_LIBRARY_PATH
* MANPATH
* CPLUS_INCLUDE_PATH
* C_INCLUDE_PATH

An alias

    mmmv_ui_reset_PATH_MANPATH_LD_LIBRARY_PATH_CPLUS_INCLUDE_PATH_C_INCLUDE_PATH

assigns a default value to those environment variables.
Aliases with a prefix of

    mmmv_ui_add2PATH_

add to the values of those environment variables.


---------------------------------------------------------------------------
                       Section_05: Vim Related Setup
---------------------------------------------------------------------------

The classical ~/.vimrc has been split to 2 parts.

    part_1) // is a symlink that is created if the ~/.vimrc does not exist.
            ln -s $MMMV_USERSPACE_DISTRO_T1_HOME/mmmv/etc/_vimrc $HOME/.vimrc

    part_2) // is present only optionally and
            // is created if it does not yet exist.
            cp "$MMMV_USERSPACE_DISTRO_T1_HOME/mmmv/lib/templates/_vimrc_userspecific_subpart_that_will_be_overwritten_automatically_template.vim" \
               "$HOME/.mmmv/_vimrc_userspecific_subpart_that_will_be_overwritten_automatically.vim"

The part_2 should NOT be edited manually, because the part_2 is expected
to be overwritten by scripts.  The whole ~/.mmmv is expected to be
autogenerated. If vim is installed, then vimwiki installation alias

    mmmv_admin_install_vimwiki

gets defined. The list of vimwiki wikis resides at the part_2 of the
~/.vimrc . The part_1 of the ~/.vimrc contains the rest of the vim
configuration that is required for the vimwiki to work. The vimwiki has
been tested to work with vim version ("vim -v")

---citation--start-----
VIM - Vi IMproved 8.1 (2018 May 18, compiled Dec 25 2021 15:48:51)
Included patches: 1-875, 878, 881, 883-884, 936, 948, 1046, 1365-1368, 1382, 1401
Extra patches: 8.2.3402, 8.2.3403, 8.2.3409, 8.2.3428
Modified by team+vim@tracker.debian.org
Compiled by team+vim@tracker.debian.org
Huge version without GUI.  Features included (+) or not (-):
+acl               +extra_search      +mouse_netterm     +tag_old_static
+arabic            +farsi             +mouse_sgr         -tag_any_white
+autocmd           +file_in_path      -mouse_sysmouse    -tcl
+autochdir         +find_in_path      +mouse_urxvt       +termguicolors
-autoservername    +float             +mouse_xterm       +terminal
-balloon_eval      +folding           +multi_byte        +terminfo
+balloon_eval_term -footer            +multi_lang        +termresponse
-browse            +fork()            -mzscheme          +textobjects
++builtin_terms    +gettext           +netbeans_intg     +textprop
+byte_offset       -hangul_input      +num64             +timers
+channel           +iconv             +packages          +title
+cindent           +insert_expand     +path_extra        -toolbar
-clientserver      +job               -perl              +user_commands
-clipboard         +jumplist          +persistent_undo   +vartabs
+cmdline_compl     +keymap            +postscript        +vertsplit
+cmdline_hist      +lambda            +printer           +virtualedit
+cmdline_info      +langmap           +profile           +visual
+comments          +libcall           -python            +visualextra
+conceal           +linebreak         -python3           +viminfo
+cryptv            +lispindent        +quickfix          +vreplace
+cscope            +listcmds          +reltime           +wildignore
+cursorbind        +localmap          +rightleft         +wildmenu
+cursorshape       -lua               -ruby              +windows
+dialog_con        +menu              +scrollbind        +writebackup
+diff              +mksession         +signs             -X11
+digraphs          +modify_fname      +smartindent       -xfontset
-dnd               +mouse             +startuptime       -xim
-ebcdic            -mouseshape        +statusline        -xpm
+emacs_tags        +mouse_dec         -sun_workshop      -xsmp
+eval              +mouse_gpm         +syntax            -xterm_clipboard
+ex_extra          -mouse_jsbterm     +tag_binary        -xterm_save
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
 2nd user vimrc file: "~/.vim/vimrc"
      user exrc file: "$HOME/.exrc"
       defaults file: "$VIMRUNTIME/defaults.vim"
  fall-back for $VIM: "/usr/share/vim"
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H   -Wdate-time  -g -O2 -fdebug-prefix-map=/build/vim-ytAPe6/vim-8.1.0875=. -fstack-protector-strong -Wformat -Werror=format-security -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1
Linking: gcc   -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -o vim        -lm -ltinfo -lnsl  -lselinux -lacl -lattr -lgpm -ldl
---citation--end-------

on ("uname -a")

---citation--start-----
Linux hoidla01 4.19.0-22-amd64 #1 SMP Debian 4.19.260-1 (2022-09-29) x86_64 GNU/Linux
---citation--end-------

vimwiki commands documentation MIGHT be available at

    ./attic/documentation/application_specific_documentation/vimwiki/third_party_documentation/2014_08_27_thedarnedestthing_com_list_of_vimwiki_commands_t1.pdf

If Vim and Ruby are installed, then the instructions for using
a program that facilitates the use of the
    "$HOME/.mmmv/userspecific_subpart_of_vimrc.vim"
MIGHT be displayed on console by executing

    mmmv_admin_vimwiki_list_of_wikis_2_vimrc_subpart_t1.rb --help


---------------------------------------------------------------------------
          Section_06: Vim and vimwiki Related Workflow Ideas
---------------------------------------------------------------------------

Vim inter-file bookmarks can be used between vimwiki pages and the code
file that one happens to edit. If one edits code with Vim, then it is
possible to place an inter-file bookmark to the file that one is at the
middle of editing and navigate to any of the "registered" vimwiki wikis
by using the

    <leader key> ws

and place another vim inter-file bookmark to some relevant vimwiki page
or some vimwiki page that is vimwiki link wise probabilistically close
to the relevant vimwiki page.

::::::::::next::idea:::::::::::::::

All quoted GUIDs like "153fe051-a6b5-4470-b84c-b0a2012179e7"
can be replaced with new ones by calling

    upguid -f editable_textfile.Foo

or by using a mmmv_userspace_distro_t1 ~/.vimrc specific
wrapper-command to a variation of that upguid command line:

    :UpGUID

::::::::::next::idea:::::::::::::::

Classical Integrated Development Environment(IDE) functionality, like
the code structure/semantics based editing in multiple files at once
and code completion, can be added to the Vim by using Vim plugins that
connect to "language servers"

    https://microsoft.github.io/language-server-protocol/

that have the concept of a "project", like it is with the year 2023
classical IDEs.


---------------------------------------------------------------------------
        Section_07: The Setup of Optional Components: Cache Server
---------------------------------------------------------------------------

The

    ./mmmv/etc/common_bashrc/common_bashrc_main.bash

conditionally creates aliases, which use the Squid cache server

    http://www.squid-cache.org/

or, depending on how the

    ./mmmv/etc/common_bashrc/common_bashrc_main.bash

has been edited, some other cache server. The Squid cache server might
be available from operating system standard package collection, but to
avoid running it as root, it is recommended to switch off the squid daemon

    # On Debian based systems as root:
    service squid stop
    ps -A  | grep squ   # to verify

and run the squid server or some other cache server as some dedicated,
ordinary, user. A copy of the Squid server MIGHT be available from

    ./attic/optional_setup_components/Squid_web_proxy


---------------------------------------------------------------------------
  Section_08: The Setup of Optional Components: User Specific Network Interface
---------------------------------------------------------------------------

As the localhost and public network interfaces are accessible to all
operating system users, the various web based administration interfaces
must be made accessible only to the operating system user that started
the program that has the web based administration interface.

One way to do that is to create a localhost analogue (hereafter:
network_interface_lh_user_X) for each operating system user, which is
accessible only to its respective operating system user. The program
that launches the web based administration interface can then be
launched by using the network_interface_lh_user_X in stead of the
localhost.

On Raspberry Pi 3, Raspbian, the solution for creating the
network_interface_lh_user_X is to run

    ifconfig lo:2 127.0.0.2 netmask 255.0.0.0 up

    # The opposite would have the prefix "down":
    # ifconfig lo:2 127.0.0.2 netmask 255.0.0.0 down

and then add the line

    127.0.0.2    network_interface_lh_user_X

to the

    /etc/hosts

and then run

    service networking restart
    systemctl daemon-reload
    service networking restart  # the duplication is just in case

and then test, whether the settings took effect by running:

    ping -c 3 network_interface_lh_user_X


The 127.0.0.2 is also visible from the output of the

    ip address # is a call to a command line utility called "ip"


---------------------------------------------------------------------------
       Section_09: Some Networking Related Commands and Ideas
---------------------------------------------------------------------------

A command for connecting a network interface to a Linux named pipe, if
the network interface is:

    network_interface_lh_user_X:4444


    mkfifo ./to_the_network_interface
    mkfifo ./from_the_network_interface
    nc -l network_interface_lh_user_X 4444 < ./to_the_network_interface > ./from_the_network_interface

Some iptables related commands:

    iptables -L -v # lists the rules

A citation from

    https://www.howtogeek.com/177621/the-beginners-guide-to-iptables-the-linux-firewall/
    ------------------citation--start-------------------
    Even though pinging an external host seems like
    something that would only need to traverse
    the output chain, keep in mind that to return
    the data, the input chain will be used as
    well.  When using iptables to lock down your
    system, remember that a lot of protocols will
    require two-way communication, so both the input
    and output chains will need to be configured
    properly. SSH is a common protocol that people
    forget to allow on both chains.
    ------------------citation--end---------------------


Some iptables related links:

    https://www.cyberciti.biz/tips/block-outgoing-network-access-for-a-single-user-from-my-server-using-iptables.html
    (archival copy: https://archive.is/l8EYe )

TODO: complete this text by describing, how to change one
local IP-address readable/writable to only one operating system user
and to figure out something with the following 2 lines:
    route add -host 127.0.0.3 dev lo
    route del -host 127.0.0.3


---------------------------------------------------------------------------
                   Section_10: Project Templates
---------------------------------------------------------------------------

A Bash project template, a single Bash file that is meant to be
customised, can be created/generated by using the alias

    mmmv_cre_bash_try_to_compile_X_template_t1

It creates a file

    $PWD/try_to_compile_X.bash

which has func_main() as its main entry. A Ruby programming language
specific GNU Make Makefile analogue is Rakefile, which can be generated
by using the alias

    mmmv_cre_Rakefile_template_t1

Makefiles are used/run by running GNU "make". Rakefiles are used/run
by running a Ruby based command line tool called "rake".  A Rakefile
template can also serve as a template for very simplistic Ruby
programs. For more elaborate Ruby console programs that utilize the
Kibuvits Ruby Library (KRL), the alias

    mmmv_cre_ruby_console_application_t2

generates/creates a file

    $PWD/ruby_console_application_template_t2.rb

that includes the KRL and has some KRL specific console program parts
pre-written. Generated project templates use the string "INCOMPLETE"
as a marker for blanks that need to be filled in with project
specific text.

The KRL and the set of Bash functions can be used as standalone
libraries that are meant to be bundled with the project that includes
their client code.  Copies of the standalone libraries can be generated
by using the aliases

    mmmv_cre_bash_boilerplate_t4_copy
    mmmv_cre_ruby_boilerplate_t5


---------------------------------------------------------------------------
                Section_11: Bundled Development Tools
---------------------------------------------------------------------------

Some of the tools depend on Ruby, because they have been implemented in
Ruby. The upguid has been covered at the Vim related section, but if the
right version of Ruby is available, then there is also a tool called
Renessaator, which has a call syntax of

    renessaator help # displays the details about command line arguments

and a set of mmmv_userspace_distro_t1 ~/.vimrc specific Vim commands like

    Renes
    Renesb

Detailed description of the Renessaator resides at

    ./mmmv/lib/mmmv_devel_tools/2015_01_22_mmmv_devel_tools_without_JumpGUID_and_IDE_integration_v_02_with_UpGUID_bugfix/src/mmmv_devel_tools/renessaator/COMMENTS.txt

The "Renesb" generates a programming language specific Renessaator block
template. The programming language name is derived from the extension of
the file that is open in Vim.

There's also a Martin.Vahi@softf1.com(me) fork of the Paul Lutus Ruby
code formatter. Unfortunately as of 2023_06 I(Martin.Vahi@softf1.com)
haven't been able to maintain it sufficiently well, so it has at one
known unfixed bug, which is that it fails to handle code like

    -----bug--test--case--citation------start-----------------------------
    s="\\n["    # The rbeautify.rb can handle this line, but
    s="\"\\n["  # at least one version of it can't handle this line, unless
                # it is commented out.
    -----bug--test--case--citation------end-------------------------------

but the rbeautify.rb is my main Ruby formatting tool and as of
2023_06 Ruby and Bash are the main programming languages that
I(Martin.Vahi@softf1.com) use.

    ----out--of--topic--sidecomment---start--------
    I don't mind C/C++ for certain tasks, but as
    of 2023_06 I just happen to stumble on tasks
    that have a lot to do with text processing
    and non-speed-critical arbitrary precision
    calculations, for which Ruby meets my taste.
    ----out--of--topic--sidecomment---end----------

The default ~/.vimrc of the mmmv_userspace_distro_t1 includes a custom
Vim command, Astr, which uses the included rbeautify.rb for formatting
the text file that is open at Vim. For C/C++ and Astyle formatter the
custom Vim command is Astd, but that uses whatever astyle version that
is available at PATH, which means that the Astd command at ~/.vimrc
might need to be customised to match the Astyle command line interface
and feature set.

---------------------------------------------------------------------------
                     Section_12: The BSD License
---------------------------------------------------------------------------

All of the components of the mmmv_userspace_distro_t1 have some
license that is compatible with the BSD license. The parts that I,
Martin.Vahi@softf1.com, have written, are usually under the BSD license,
but some are also placed to "public domain"(0BSD).  The BSD license is:

Copyright from the inception of this software till 3000,
martin.vahi@softf1.com that has an Estonian personal identification code
of 38108050020.  All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

*   Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

*   Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer
    in the documentation and/or other materials provided with the
    distribution.

*   Neither the name of the Martin Vahi nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE

The following line is a spdx.org license label line:
SPDX-License-Identifier: BSD-3-Clause-Clear


---------------------------------------------------------------------------
              Section_13: A BSD License Related note
---------------------------------------------------------------------------

If You set up the mmmv_userspace_distro_t1 the way it is
intended to be set up, then the path of the current file is

    $MMMV_USERSPACE_DISTRO_T1_HOME/COMMENTS.txt

which in turn contains the BSD license text at its Section_09
and with that the BSD license requirement about listing
me, the Martin.Vahi@softf1.com, as an author is satisfied.


---------------------------------------------------------------------------
            Section_14: Open Source Cooperation Protocol
---------------------------------------------------------------------------

As of 2025_07 I(Martin.Vahi@softf1.com) do use libraries without
auditing them, specially popular mainstream libraries, where I have
a hope that if they contain any malware or serious flaws, then other
people will notice them without me having to do anything for fixing
the situation, but other than that I do not copy-paste other people's
code to my projects without thoroughly auditing them by using other
people's code as a template that gets thoroughly rewritten during the
auditing.

What regards to coding style rules, then I(Martin.Vahi@softf1.com) am
deeply convinced that I am not the best software developer on planet
Earth, which means that if I want to learn from people, who are better
than me, then I must humbly hope that they at least bother to submit
their code to me in their own style. That way I can learn from their
code style and may be change my own code style according to what I am
capable of learning from their code style. If I rewrite the submitted
code during the auditing anyway, then I manually or semi-manually
reformat it to my own style anyway, so it does not matter, if the
submitted code is in a style that I do not prefer to use myself.

My main communication channel is email(Martin.Vahi@softf1.com),
but as of 2025_07 the suggested main space for project specific
feedback and code submissions is GitHub bugtrack. In the case of the
mmmv_userspace_distro_t1 it is

    https://github.com/martinvahi/mmmv_userspace_distro_t1/issues

although I also look at

    https://codeberg.org/martinvahi/mmmv_userspace_distro_t1/issues
    https://sourceforge.net/p/mmmv-userspace-distro-t1/discussion/

As of 2025_07 I(Martin.Vahi@softf1.com) generally do NOT answer phone
calls that originate from phone numbers that I have not stored to my
phone. My phone number is public mainly to make it easier to find
for people, who have arranged the phone call over email or they have
arranged the phone call by sending me a relevant SMS in Estonian or
in Finnish. Not many people globally speak Estonian and as of 2025_07
the various spammers haven't bothered to use machine translation for
Estonian either, because due to the small population size Estonia is so
small market that it is almost irrelevant to spammers. Local spammers
are not an issue in Estonia, because as of 2025_07 it is illegal in
Estonia to spam private phone numbers and private email addresses.  I
use the email address Martin.Vahi@softf1.com as both, a private email
address and a business email address, which makes it perfectly legal to
spam that, but as of 2025_07 I have over 200 email filters to sort the
mail, so I can handle some spam without "too much" effort and all of
that without loosing more useful letters than may be about 1 or 2 per
year, if even that many.


---------------------------------------------------------------------------
      Section_15: Inspiring or Similar Projects Hall of Fame
---------------------------------------------------------------------------

The list of projects that are a source of inspiration for the
mmmv_userspace_distro_t1 is clearly longer than this list here, but as
shoddy compromise, this list here is better than nothing.

    TURNKEY Linux:
        https://www.turnkeylinux.org/
        https://github.com/turnkeylinux-apps/core

    Virtual Machines and Appliances Files
    by SourceForge user mrplastik
        https://sourceforge.net/projects/virtualappliances/files/

#--------------------------------------------------------------------------
# Initial author of this file: Martin.Vahi@softf1.com
# This file is in public domain.
# The following line is a spdx.org license label line:
# SPDX-License-Identifier: 0BSD
# S_VERSION_OF_THIS_FILE="757c0da6-01e8-4822-832c-b0a2012179e7"
===========================================================================
