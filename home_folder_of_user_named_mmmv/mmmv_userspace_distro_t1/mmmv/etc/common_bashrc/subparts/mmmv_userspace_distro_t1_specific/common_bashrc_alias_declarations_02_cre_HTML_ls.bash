#!/usr/bin/env bash
#==========================================================================
# Initial author of this file: Martin.Vahi@softf1.com
# This file is in public domain.
#
# The following line is a spdx.org license label line:
# SPDX-License-Identifier: 0BSD
#==========================================================================
S_FP_DIR_TMP_0="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
if [ "$MMMV_USERSPACE_DISTRO_T1_HOME" == "" ]; then
    MMMV_USERSPACE_DISTRO_T1_HOME="`cd $S_FP_DIR_TMP_0/../../../../../; pwd`"
fi
#--------------------------------------------------------------------------
if [ "$MMMV_USERSPACE_DISTRO_T1_BASHRC_PREFIX_LOAD_MODE_T1" != "mode_ok_to_load" ]; then
    S_ERR_CODE="1"
    echo ""
    echo "This script is expected to be a sub-part of the "
    #--------------------
    echo "$MMMV_USERSPACE_DISTRO_T1_HOME/mmmv/etc/common_bashrc/common_bashrc_main.bash"
    #--------------------
    if [ "$MMMV_USERSPACE_DISTRO_T1_BASHRC_PREFIX_LOAD_MODE_T1" != "" ]; then
        echo ""
        echo "    MMMV_USERSPACE_DISTRO_T1_BASHRC_PREFIX_LOAD_MODE_T1==$MMMV_USERSPACE_DISTRO_T1_BASHRC_PREFIX_LOAD_MODE_T1"
        echo ""
    fi
    echo -e "\e[31mExiting with an error code $S_ERR_CODE . \e[39m"
    echo "GUID=='a8a6e054-e0b1-416a-9e16-3010a021a9e7'"
    echo ""
    exit $S_ERR_CODE # exit with an error
fi
#==========================================================================
# The  "find -L . -type d " and "find -L . -type f " work on both, Linux
# and BSD, but the AVFS fails to deal with symlinks, so creating
# file olist HTML-files outside of the indexable .zip files is useless.
#==========================================================================
# #---start--of--cre_HTML_ls_tX-alias--code--template--01--
# S_FN="index.html" ;
# S_FP="`pwd`/$S_FN" ;
# SB_GENERATE="f" ;
# func_generate_HTML_without_verifying_anything(){
# printf '<!DOCTYPE HTML>\n<html>\n<head>\n<title>ls</title>\n<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">\n<!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\n</head>\n<body id="the_document_body">\n<h1>ls</h1>\n<ul>\n    <li>\n        <a href="./../">..</a>\n    </li>\n' > $S_FP ; sync ; wait ; find . -maxdepth 1  -type d | grep -v -E '^[.]$' | $S_CMD_GNU_SED -e 's/^[.][\/]//g' | sort | $S_CMD_GNU_SED -e 's/\(^.\+$\)/    <li><a href=".\/\1\/">\1\/<\/a><\/li>/g' >> $S_FP ; sync ; wait ; find . -maxdepth 1 -type f | grep -i -v -E "$S_FN"'$' | $S_CMD_GNU_SED -e 's/^[.][\/]//g' | sort | $S_CMD_GNU_SED -e 's/\(^.\+$\)/    <li><a href=".\/\1">\1<\/a><\/li>/g' >> $S_FP ; sync ; wait ; printf '</ul>\n</body>\n</html>\n' >> $S_FP ;
# } ;
# if [ -h $S_FP ]; then
#     echo "" ;
#     if [ -e $S_FP ]; then
#         if [ -d $S_FP ]; then
#             echo -e "A\e[31m symlink to a folder \e[39m" ;
#         else
#             echo -e "A\e[31m symlink to a file \e[39m" ;
#         fi ;
#     else
#         echo -e "A\e[31m broken symlink\e[39m" ;
#     fi ;
#     echo "" ;
#     echo "    $S_FP" ;
#     echo "" ;
#     echo -e "exists, but it is expected to be missing or a file." ;
#     echo "Not deleting it. Aborting Bash alias." ;
#     echo "GUID=='2c60f671-0d1d-4c80-8936-3010a021a9e7'" ;
#     echo "" ;
# else
#     if [ -e $S_FP ]; then
#         if [ -d $S_FP ]; then
#             echo "" ;
#             echo -e "A\e[31m folder\e[39m with a path of " ;
#             echo "" ;
#             echo "    $S_FP" ;
#             echo "" ;
#             echo -e "exists, but it is expected to be missing or a file." ;
#             echo "Not deleting it. Aborting Bash alias." ;
#             echo "GUID=='a3d6ea95-bfd5-4663-8946-3010a021a9e7'" ;
#             echo "" ;
#         else
#             if [ ! -r $S_FP ]; then
#                 echo "" ;
#                 echo "A file with a path of" ;
#                 echo "" ;
#                 echo "    $S_FP" ;
#                 echo "" ;
#                 echo -e "\e[31mis NOT readable\e[39m. Aborting Bash alias." ;
#                 echo "GUID=='20679e54-1c66-4307-bc16-3010a021a9e7'" ;
#                 echo "" ;
#             else
#                 if [ ! -w $S_FP ]; then
#                     echo "" ;
#                     echo "A file with a path of" ;
#                     echo "" ;
#                     echo "    $S_FP" ;
#                     echo "" ;
#                     echo -e "\e[31mis NOT writable\e[39m. Aborting Bash alias." ;
#                     echo "GUID=='41f39b11-f9b9-4b8f-b516-3010a021a9e7'" ;
#                     echo "" ;
#                 else
#                     S_TMP_0="`nice -n 2 cat $S_FP | grep ' MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 '`" ;
#                     if [ "$S_TMP_0" == "" ]; then
#                         echo "" ;
#                         echo "The file " ;
#                         echo "" ;
#                         echo "    $S_FP" ;
#                         echo "" ;
#                         echo -e "exists, but it\e[31m does not include the string \e[39m" ;
#                         echo -e "\"\e[31m MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 \e[39m\"." ;
#                         echo "Quotation marks around it are not required, but" ;
#                         echo "at least one space at each side of it is compulsory." ;
#                         echo "Not overwriting the file. Aborting Bash alias." ;
#                         echo "GUID=='536d4546-7373-47cd-bcd6-3010a021a9e7'" ;
#                         echo "" ;
#                     else
#                         rm $S_FP ;
#                         if [ "$?" != "0" ]; then
#                             echo "" ;
#                             echo -e "\e[31mFailed to delete\e[39m the old version of the file" ;
#                             echo "" ;
#                             echo "    $S_FP" ;
#                             echo "" ;
#                             echo "Aborting Bash alias." ;
#                             echo "GUID=='14430f45-0fa3-4813-9746-3010a021a9e7'" ;
#                             echo "" ;
#                         else
#                             sync ; wait ;
#                             if [ ! -e $S_FP ]; then
#                                 SB_GENERATE="t" ;
#                             else
#                                 echo "" ;
#                                 echo -e "\e[31mSomething went wrong\e[39m. The file " ;
#                                 echo "" ;
#                                 echo "    $S_FP" ;
#                                 echo "" ;
#                                 echo "still exists. Aborting Bash alias." ;
#                                 echo "GUID=='752031d7-e30e-4161-9776-3010a021a9e7'" ;
#                                 echo "" ;
#                             fi ;
#                         fi ;
#                     fi ;
#                 fi ;
#             fi ;
#         fi ;
#     else
#         SB_GENERATE="t" ;
#     fi ;
# fi ;
# if [ "$SB_GENERATE" == "t" ]; then
#     if [ -e $S_FP ]; then
#         chmod 0700 $S_FP ;
#         if [ "$?" != "0" ]; then
#             SB_GENERATE="f" ;
#             echo "" ;
#             echo -e "\e[31mFailed to change the permission of the file\e[39m" ;
#             echo "" ;
#             echo "    $S_FP" ;
#             echo "" ;
#             echo "to 0700 before trying to overwrite it. Aborting Bash alias." ;
#             echo "GUID=='1b73f313-8b11-48cd-8046-3010a021a9e7'" ;
#             echo "" ;
#         fi ;
#         sync ; wait ;
#     fi ;
# fi ;
# if [ "$SB_GENERATE" == "t" ]; then
#     func_generate_HTML_without_verifying_anything  ;
#     sync ; wait ;
#     if [ -e $S_FP ]; then
#         if [ -h $S_FP ]; then
#             echo "" ;
#             echo -e "\e[31mFailed to create or overwrite file\e[39m" ;
#             echo "" ;
#             echo "    $S_FP" ;
#             echo "" ;
#             if [ -d $S_FP ]; then
#                 echo "There is a symlink to a folder with that path." ;
#                 echo "GUID=='3b9354a3-a381-468a-8346-3010a021a9e7'" ;
#             else
#                 echo "There is a symlink to a file with that path." ;
#                 echo "GUID=='300c6a31-a581-4e13-9325-3010a021a9e7'" ;
#             fi ;
#             echo "" ;
#         else
#             if [ -d $S_FP ]; then
#                 echo "" ;
#                 echo -e "\e[31mFailed to create or overwrite file\e[39m" ;
#                 echo "" ;
#                 echo "    $S_FP" ;
#                 echo "" ;
#                 echo "There is a folder with that path." ;
#                 echo "GUID=='3d82ae41-86d1-48e8-be55-3010a021a9e7'" ;
#                 echo "" ;
#             else
#                 chmod 0700 $S_FP ;
#                 sync ; wait ;
#                 echo "" ;
#                 echo -e "\e[32mHTML generation complete\e[39m. The generated file:" ;
#                 echo "" ;
#                 echo "    $S_FP" ;
#                 echo "" ;
#             fi ;
#         fi ;
#     else
#         echo "" ;
#         echo -e "\e[31mFailed to create or overwrite file\e[39m" ;
#         echo "" ;
#         echo "    $S_FP" ;
#         echo "" ;
#         if [ -h $S_FP ]; then
#             echo "There is a broken symlink with that path." ;
#             echo "GUID=='4920f7b2-32ca-4a1d-9615-3010a021a9e7'" ;
#         else
#             echo "GUID=='ab93b995-c9c6-4422-b955-3010a021a9e7'" ;
#         fi ;
#         echo "" ;
#     fi ;
# fi
# #---end---of--cre_HTML_ls_tX-alias--code--template--01--
# #
# # The 2. line at the following 3liner is the verification free core of the Bash alias
# #---start--of--cre_HTML_ls_tX-alias--code--template--01--modified-to-3liner
# S_FN="index.html" ; S_FP="`pwd`/$S_FN" ; SB_GENERATE="f" ; func_generate_HTML_without_verifying_anything(){
# printf '<!DOCTYPE HTML>\n<html>\n<head>\n<title>ls</title>\n<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">\n<!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\n</head>\n<body id="the_document_body">\n<h1>ls</h1>\n<ul>\n    <li>\n        <a href="./../">..</a>\n    </li>\n' > $S_FP ; sync ; wait ; find . -maxdepth 1  -type d | grep -v -E '^[.]$' | $S_CMD_GNU_SED -e 's/^[.][\/]//g' | sort | $S_CMD_GNU_SED -e 's/\(^.\+$\)/    <li><a href=".\/\1\/">\1\/<\/a><\/li>/g' >> $S_FP ; sync ; wait ; find . -maxdepth 1 -type f | grep -i -v -E "$S_FN"'$' | $S_CMD_GNU_SED -e 's/^[.][\/]//g' | sort | $S_CMD_GNU_SED -e 's/\(^.\+$\)/    <li><a href=".\/\1">\1<\/a><\/li>/g' >> $S_FP ; sync ; wait ; printf '</ul>\n</body>\n</html>\n' >> $S_FP ;
# } ; if [ -h $S_FP ]; then echo "" ; if [ -e $S_FP ]; then if [ -d $S_FP ]; then echo -e "A\e[31m symlink to a folder \e[39m" ; else echo -e "A\e[31m symlink to a file \e[39m" ; fi ; else echo -e "A\e[31m broken symlink\e[39m" ; fi ; echo "" ; echo "    $S_FP" ; echo "" ; echo -e "exists, but it is expected to be missing or a file." ; echo "Not deleting it. Aborting Bash alias." ; echo "GUID=='19a69fb5-2938-4f69-ad35-3010a021a9e7'" ; echo "" ; else if [ -e $S_FP ]; then if [ -d $S_FP ]; then echo "" ; echo -e "A\e[31m folder\e[39m with a path of " ; echo "" ; echo "    $S_FP" ; echo "" ; echo -e "exists, but it is expected to be missing or a file." ; echo "Not deleting it. Aborting Bash alias." ; echo "GUID=='b93a4d27-e03a-4166-a7c5-3010a021a9e7'" ; echo "" ; else if [ ! -r $S_FP ]; then echo "" ; echo "A file with a path of" ; echo "" ; echo "    $S_FP" ; echo "" ; echo -e "\e[31mis NOT readable\e[39m. Aborting Bash alias." ; echo "GUID=='525e8644-ee85-4440-aa15-3010a021a9e7'" ; echo "" ; else if [ ! -w $S_FP ]; then echo "" ; echo "A file with a path of" ; echo "" ; echo "    $S_FP" ; echo "" ; echo -e "\e[31mis NOT writable\e[39m. Aborting Bash alias." ; echo "GUID=='1289f041-ee81-4219-9915-3010a021a9e7'" ; echo "" ; else S_TMP_0="`nice -n 2 cat $S_FP | grep ' MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 '`" ; if [ "$S_TMP_0" == "" ]; then echo "" ; echo "The file " ; echo "" ; echo "    $S_FP" ; echo "" ; echo -e "exists, but it\e[31m does not include the string \e[39m" ; echo -e "\"\e[31m MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 \e[39m\"." ; echo "Quotation marks around it are not required, but" ; echo "at least one space at each side of it is compulsory." ; echo "Not overwriting the file. Aborting Bash alias." ; echo "GUID=='5223c025-eeed-47e2-b745-3010a021a9e7'" ; echo "" ; else rm $S_FP ; if [ "$?" != "0" ]; then echo "" ; echo -e "\e[31mFailed to delete\e[39m the old version of the file" ; echo "" ; echo "    $S_FP" ; echo "" ; echo "Aborting Bash alias." ; echo "GUID=='1c02f4a1-9c3d-4e95-bb35-3010a021a9e7'" ; echo "" ; else sync ; wait ; if [ ! -e $S_FP ]; then SB_GENERATE="t" ; else echo "" ; echo -e "\e[31mSomething went wrong\e[39m. The file " ; echo "" ; echo "    $S_FP" ; echo "" ; echo "still exists. Aborting Bash alias." ; echo "GUID=='ea02fbb2-ec36-4bc6-b145-3010a021a9e7'" ; echo "" ; fi ; fi ; fi ; fi ; fi ; fi ; else SB_GENERATE="t" ; fi ; fi ; if [ "$SB_GENERATE" == "t" ]; then if [ -e $S_FP ]; then chmod 0700 $S_FP ; if [ "$?" != "0" ]; then SB_GENERATE="f" ; echo "" ; echo -e "\e[31mFailed to change the permission of the file\e[39m" ; echo "" ; echo "    $S_FP" ; echo "" ; echo "to 0700 before trying to overwrite it. Aborting Bash alias." ; echo "GUID=='4ce41f84-8128-41f8-9f15-3010a021a9e7'" ; echo "" ; fi ; sync ; wait ; fi ; fi ; if [ "$SB_GENERATE" == "t" ]; then func_generate_HTML_without_verifying_anything  ; sync ; wait ; if [ -e $S_FP ]; then if [ -h $S_FP ]; then echo "" ; echo -e "\e[31mFailed to create or overwrite file\e[39m" ; echo "" ; echo "    $S_FP" ; echo "" ; if [ -d $S_FP ]; then echo "There is a symlink to a folder with that path." ; echo "GUID=='1ac5c622-caf4-44fe-8135-3010a021a9e7'" ; else echo "There is a symlink to a file with that path." ; echo "GUID=='3af3f4b5-2a88-4c1f-9e45-3010a021a9e7'" ; fi ; echo "" ; else if [ -d $S_FP ]; then echo "" ; echo -e "\e[31mFailed to create or overwrite file\e[39m" ; echo "" ; echo "    $S_FP" ; echo "" ; echo "There is a folder with that path." ; echo "GUID=='573ab4b3-7d1c-4853-a654-3010a021a9e7'" ; echo "" ; else chmod 0700 $S_FP ; sync ; wait ; echo "" ; echo -e "\e[32mHTML generation complete\e[39m. The generated file:" ; echo "" ; echo "    $S_FP" ; echo "" ; fi ; fi ; else echo "" ; echo -e "\e[31mFailed to create or overwrite file\e[39m" ; echo "" ; echo "    $S_FP" ; echo "" ; if [ -h $S_FP ]; then echo "There is a broken symlink with that path." ; echo "GUID=='b3e5ec5f-d331-4769-9154-3010a021a9e7'" ; else echo "GUID=='b3346a25-3b03-42ce-94b4-3010a021a9e7'" ; fi ; echo "" ; fi ; fi
# #---end---of--cre_HTML_ls_tX-alias--code--template--01--modified-to-3liner
#==========================================================================
S_BASHALIASCODE_PART_1="S_FP=\"\`pwd\`/\$S_FN\" ; SB_GENERATE=\"f\" ; func_generate_HTML_without_verifying_anything(){ "
S_BASHALIASCODE_SUFFIX=" } ; if [ -h \$S_FP ]; then echo \"\" ; if [ -e \$S_FP ]; then if [ -d \$S_FP ]; then echo -e \"A\\e[31m symlink to a folder \\e[39m\" ; else echo -e \"A\\e[31m symlink to a file \\e[39m\" ; fi ; else echo -e \"A\\e[31m broken symlink\\e[39m\" ; fi ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo -e \"exists, but it is expected to be missing or a file.\" ; echo \"Not deleting it. Aborting Bash alias.\" ; echo \"GUID=='1ce8d792-0887-44b9-b054-3010a021a9e7'\" ; echo \"\" ; else if [ -e \$S_FP ]; then if [ -d \$S_FP ]; then echo \"\" ; echo -e \"A\\e[31m folder\\e[39m with a path of \" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo -e \"exists, but it is expected to be missing or a file.\" ; echo \"Not deleting it. Aborting Bash alias.\" ; echo \"GUID=='41d70452-457e-4b6c-8b24-3010a021a9e7'\" ; echo \"\" ; else if [ ! -r \$S_FP ]; then echo \"\" ; echo \"A file with a path of\" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo -e \"\\e[31mis NOT readable\\e[39m. Aborting Bash alias.\" ; echo \"GUID=='0485a19e-7fcf-4359-b354-3010a021a9e7'\" ; echo \"\" ; else if [ ! -w \$S_FP ]; then echo \"\" ; echo \"A file with a path of\" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo -e \"\\e[31mis NOT writable\\e[39m. Aborting Bash alias.\" ; echo \"GUID=='8f0dfab4-e220-49f6-9754-3010a021a9e7'\" ; echo \"\" ; else S_TMP_0=\"\`nice -n 2 cat \$S_FP | grep ' MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 '\`\" ; if [ \"\$S_TMP_0\" == \"\" ]; then echo \"\" ; echo \"The file \" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo -e \"exists, but it\\e[31m does not include the string \\e[39m\" ; echo -e \"\\\"\\e[31m MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 \\e[39m\\\".\" ; echo \"Quotation marks around it are not required, but\" ; echo \"at least one space at each side of it is compulsory.\" ; echo \"Not overwriting the file. Aborting Bash alias.\" ; echo \"GUID=='47326ff1-43ac-4b2b-9734-3010a021a9e7'\" ; echo \"\" ; else rm \$S_FP ; if [ \"\$?\" != \"0\" ]; then echo \"\" ; echo -e \"\\e[31mFailed to delete\\e[39m the old version of the file\" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo \"Aborting Bash alias.\" ; echo \"GUID=='77cd93f3-7882-4ec9-a514-3010a021a9e7'\" ; echo \"\" ; else sync ; wait ; if [ ! -e \$S_FP ]; then SB_GENERATE=\"t\" ; else echo \"\" ; echo -e \"\\e[31mSomething went wrong\\e[39m. The file \" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo \"still exists. Aborting Bash alias.\" ; echo \"GUID=='963aa7c5-f075-487d-8e44-3010a021a9e7'\" ; echo \"\" ; fi ; fi ; fi ; fi ; fi ; fi ; else SB_GENERATE=\"t\" ; fi ; fi ; if [ \"\$SB_GENERATE\" == \"t\" ]; then if [ -e \$S_FP ]; then chmod 0700 \$S_FP ; if [ \"\$?\" != \"0\" ]; then SB_GENERATE=\"f\" ; echo \"\" ; echo -e \"\\e[31mFailed to change the permission of the file\\e[39m\" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo \"to 0700 before trying to overwrite it. Aborting Bash alias.\" ; echo \"GUID=='4593f6c3-735d-42a3-a134-3010a021a9e7'\" ; echo \"\" ; fi ; sync ; wait ; fi ; fi ; if [ \"\$SB_GENERATE\" == \"t\" ]; then func_generate_HTML_without_verifying_anything  ; sync ; wait ; if [ -e \$S_FP ]; then if [ -h \$S_FP ]; then echo \"\" ; echo -e \"\\e[31mFailed to create or overwrite file\\e[39m\" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; if [ -d \$S_FP ]; then echo \"There is a symlink to a folder with that path.\" ; echo \"GUID=='5cbe59e2-c097-42e7-8644-3010a021a9e7'\" ; else echo \"There is a symlink to a file with that path.\" ; echo \"GUID=='3b98b161-fccd-4c81-9924-3010a021a9e7'\" ; fi ; echo \"\" ; else if [ -d \$S_FP ]; then echo \"\" ; echo -e \"\\e[31mFailed to create or overwrite file\\e[39m\" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo \"There is a folder with that path.\" ; echo \"GUID=='e1001425-469b-4832-bf34-3010a021a9e7'\" ; echo \"\" ; else chmod 0700 \$S_FP ; sync ; wait ; echo \"\" ; echo -e \"\\e[32mHTML generation complete\\e[39m. The generated file:\" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; fi ; fi ; else echo \"\" ; echo -e \"\\e[31mFailed to create or overwrite file\\e[39m\" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; if [ -h \$S_FP ]; then echo \"There is a broken symlink with that path.\" ; echo \"GUID=='3a4f0c23-3b09-49fa-9f14-3010a021a9e7'\" ; else echo \"GUID=='fec43b12-2d58-4483-9b43-3010a021a9e7'\" ; fi ; echo \"\" ; fi ; fi "
#--------------------------------------------------------------------------
if [ "$SB_SED_OR_GSED_EXISTS_ON_PATH" == "t" ]; then
    if [ "$SB_GREP_EXISTS_ON_PATH" == "t" ]; then
        if [ "$SB_SORT_EXISTS_ON_PATH" == "t" ]; then
            if [ "$SB_PRINTF_EXISTS_ON_PATH" == "t" ]; then
                S_BASHALIASCODE_VERIFICATIONFREE_CORE="printf '<!DOCTYPE HTML>\\n<html>\\n<head>\\n<title>ls</title>\\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\\n<!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\\n</head>\\n<body id=\"the_document_body\">\\n<h1>ls</h1>\\n<ul>\\n    <li>\\n        <a href=\"./../\">..</a>\\n    </li>\\n' > \$S_FP ; sync ; wait ; ls -1 | sort | grep -i -v -E \"\$S_FN\"'\$' | $S_CMD_GNU_SED -e 's/\\(^.\\+\$\\)/    <li><a href=\".\\/\\1\">\\1<\\/a><\\/li>/g' >> \$S_FP ; sync ; wait ; printf '</ul>\\n</body>\\n</html>\\n' >> \$S_FP ; "
                alias mmmv_cre_HTML_ls_t1_folders_and_files_sorted_alphabetically="S_FN=\"index.html\" ; $S_BASHALIASCODE_PART_1 $S_BASHALIASCODE_VERIFICATIONFREE_CORE $S_BASHALIASCODE_SUFFIX "
                if [ "$SB_FIND_EXISTS_ON_PATH" == "t" ]; then
                    #------------------------------------------------------
                    S_BASHALIASCODE_VERIFICATIONFREE_CORE="printf '<!DOCTYPE HTML>\\n<html>\\n<head>\\n<title>ls</title>\\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\\n<!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\\n</head>\\n<body id=\"the_document_body\">\\n<h1>ls</h1>\\n<ul>\\n    <li>\\n        <a href=\"./../\">..</a>\\n    </li>\\n' > \$S_FP ; sync ; wait ; find . -maxdepth 1  -type d | grep -v -E '^[.]\$' | $S_CMD_GNU_SED -e 's/^[.][\\/]//g' | sort | $S_CMD_GNU_SED -e 's/\\(^.\\+\$\\)/    <li><a href=\".\\/\\1\\/\">\\1\\/<\\/a><\\/li>/g' >> \$S_FP ; sync ; wait ; find . -maxdepth 1 -type f | grep -i -v -E \"\$S_FN\"'\$' | $S_CMD_GNU_SED -e 's/^[.][\\/]//g' | sort | $S_CMD_GNU_SED -e 's/\\(^.\\+\$\\)/    <li><a href=\".\\/\\1\">\\1<\\/a><\\/li>/g' >> \$S_FP ; sync ; wait ; printf '</ul>\\n</body>\\n</html>\\n' >> \$S_FP ; "
                    alias mmmv_cre_HTML_ls_t2_folders_first_then_files="S_FN=\"index.html\" ; $S_BASHALIASCODE_PART_1 $S_BASHALIASCODE_VERIFICATIONFREE_CORE $S_BASHALIASCODE_SUFFIX "
                    #------------------------------------------------------
                    S_BASHALIASCODE_VERIFICATIONFREE_CORE=" printf '<!DOCTYPE HTML>\\n<html>\\n<head>\\n<title>Recurive list of Files and Folders</title>\\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\\n<!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\\n</head>\\n<body id=\"the_document_body\">\\n<h1>Recurive list of Files and Folders</h1>\\n<ul>\\n    <li>\\n        <a href=\"./../\">..</a>\\n    </li>\\n' > \$S_FP ; sync ; wait ; find . -type d | grep -v -E '^[.]\$' | $S_CMD_GNU_SED -e 's/^[.][\\/]//g' | sort | $S_CMD_GNU_SED -e 's/\\(^.\\+\$\\)/    <li><a href=\".\\/\\1\\/\">\\1\\/<\\/a><\\/li>/g' >> \$S_FP ; sync ; wait ; find . -type f | $S_CMD_GNU_SED -e 's/^[.][\\/]//g' | sort | $S_CMD_GNU_SED -e 's/\\(^.\\+\$\\)/    <li><a href=\".\\/\\1\">\\1<\\/a><\\/li>/g' >> \$S_FP ; sync ; wait ; printf '</ul>\\n</body>\\n</html>\\n' >> \$S_FP ; "
                    alias mmmv_cre_HTML_ls_t3_recursively_folders_first_then_files="S_FN=\"recursive_list_of_files_and_folders.html\" ; $S_BASHALIASCODE_PART_1 $S_BASHALIASCODE_VERIFICATIONFREE_CORE $S_BASHALIASCODE_SUFFIX "
                    #------------------------------------------------------
                fi
            fi
        fi
    fi
fi
#--------------------------------------------------------------------------
if [ "$SB_SORT_EXISTS_ON_PATH" == "t" ]; then
    if [ "$SB_FIND_EXISTS_ON_PATH" == "t" ]; then
        #------------------------------------------------------------------
        alias mmmv_cre_txt_list_of_files_t1="S_FP=\"\`pwd\`/list_of_files.txt\" ; if [ ! -e \"\$S_FP\" ]; then find . -type f | sort  > \$S_FP ; sync ; wait ; chmod 0700 \$S_FP ; sync ; wait ; else echo \"\" ; echo \"A file or a folder with the path of \" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo -e \"\\e[31malready exists\\e[39m. Not overwriting it.\" ; echo \"\" ; fi "
        alias mmmv_cre_txt_list_of_symlinks_t1="S_FP=\"\`pwd\`/list_of_symlinks.txt\" ; if [ ! -e \"\$S_FP\" ]; then find . -type l | sort  > \$S_FP ; sync ; wait ; chmod 0700 \$S_FP ; sync ; wait ; else echo \"\" ; echo \"A file or a folder with the path of \" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo -e \"\\e[31malready exists\\e[39m. Not overwriting it.\" ; echo \"\" ; fi "
        #------------------------------------------------------------------
        # Testline with GNU sed:
        #
        #    printf 'first\nsecond' | sed -e 's/\(^.\+$\)/                <li><a href="\1">\1<\/a><\/li>/g' | sed -e '1{s/^/<!DOCTYPE HTML>\n<html>\n    <head>\n        <title>List of Files<\/title>\n        <meta http-equiv="Content-Type" content="text\/html; charset=UTF-8">\n        <!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\n    <\/head>\n    <body id="the_document_body">\n        <h1>List of Files<\/h1>\n            <ul>\n/g}' | sed -e '${s/$/\n            <\/ul>\n            <\/br><\/br>\n    <\/body>\n<\/html>\n/g}'
        #
        #---------------
        if [ "$SB_SED_OR_GSED_EXISTS_ON_PATH" == "t" ]; then
            S_BASHALIASCODE_VERIFICATIONFREE_CORE=" find . -type f | sort | $S_CMD_GNU_SED -e 's/\\(^.\\+\$\\)/                <li><a href=\"\\1\">\\1<\\/a><\\/li>/g' | $S_CMD_GNU_SED -e '1{s/^/<!DOCTYPE HTML>\\n<html>\\n    <head>\\n        <title>Recursive list of Files<\\/title>\\n        <meta http-equiv=\"Content-Type\" content=\"text\\/html; charset=UTF-8\">\\n        <!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\\n    <\\/head>\\n    <body id=\"the_document_body\">\\n        <h1>List of Files<\\/h1>\\n            <ul>\\n/g}' | $S_CMD_GNU_SED -e '\${s/\$/\\n            <\\/ul>\\n            <\\/br><\\/br>\\n    <\\/body>\\n<\\/html>\\n/g}' > \$S_FP ; "
            alias mmmv_cre_HTML_ls_t4_recursive_list_of_files="S_FN=\"recursive_list_of_files.html\" ; $S_BASHALIASCODE_PART_1 $S_BASHALIASCODE_VERIFICATIONFREE_CORE $S_BASHALIASCODE_SUFFIX "
        fi
        #------------------------------------------------------------------
        if [ "$SB_GREP_EXISTS_ON_PATH" == "t" ]; then
            #---------------
            # "find . -type d " lists the parent folder,
            # the ".", as one of the directories.
            alias mmmv_cre_txt_list_of_folders_t1="S_FP=\"\`pwd\`/list_of_folders.txt\" ; if [ ! -e \"\$S_FP\" ]; then find . -type d | grep -E -v '^[.]\$' | sort  > \$S_FP ; sync ; wait ; chmod 0700 \$S_FP ; sync ; wait ; else echo \"\" ; echo \"A file or a folder with the path of \" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo -e \"\\e[31malready exists\\e[39m. Not overwriting it.\" ; echo \"\" ; fi "
            #---------------
            S_BASHALIASCODE_VERIFICATIONFREE_CORE=" find . -type d | grep -E -v '^[.]\$' | sort | $S_CMD_GNU_SED -e 's/\\(^.\\+\$\\)/                <li><a href=\"\\1\">\\1<\\/a><\\/li>/g' | $S_CMD_GNU_SED -e '1{s/^/<!DOCTYPE HTML>\\n<html>\\n    <head>\\n        <title>Recursive list of Folders<\\/title>\\n        <meta http-equiv=\"Content-Type\" content=\"text\\/html; charset=UTF-8\">\\n        <!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\\n    <\\/head>\\n    <body id=\"the_document_body\">\\n        <h1>List of Folders<\\/h1>\\n            <ul>\\n/g}' | $S_CMD_GNU_SED -e '\${s/\$/\\n            <\\/ul>\\n            <\\/br><\\/br>\\n    <\\/body>\\n<\\/html>\\n/g}' > \$S_FP ; "
            alias mmmv_cre_HTML_ls_t5_recursive_list_of_folders="S_FN=\"recursive_list_of_folders.html\" ; $S_BASHALIASCODE_PART_1 $S_BASHALIASCODE_VERIFICATIONFREE_CORE $S_BASHALIASCODE_SUFFIX "
            #---------------
            alias mmmv_cre_txt_partial_list_of_folders_t2="S_FP=\"\`pwd\`/list_of_folders.txt\" ; if [ ! -e \"\$S_FP\" ]; then find . -type d | grep -E -v '^[.]\$' | grep -v '[/]par2_based_error_correction_files' | sort  > \$S_FP ; sync ; wait ; chmod 0700 \$S_FP ; sync ; wait ; else echo \"\" ; echo \"A file or a folder with the path of \" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo -e \"\\e[31malready exists\\e[39m. Not overwriting it.\" ; echo \"\" ; fi "
            #---------------
            S_BASHALIASCODE_VERIFICATIONFREE_CORE=" find . -type d | grep -E -v '^[.]\$' | grep -i -v '[/]par2_based_error_correction_files' | sort | $S_CMD_GNU_SED -e 's/\\(^.\\+\$\\)/                <li><a href=\"\\1\">\\1<\\/a><\\/li>/g' | $S_CMD_GNU_SED -e '1{s/^/<!DOCTYPE HTML>\\n<html>\\n    <head>\\n        <title>Partial list of Folders<\\/title>\\n        <meta http-equiv=\"Content-Type\" content=\"text\\/html; charset=UTF-8\">\\n        <!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\\n    <\\/head>\\n    <body id=\"the_document_body\">\\n        <h1>Partial list of Folders<\\/h1>\\n            <ul>\\n/g}' | $S_CMD_GNU_SED -e '\${s/\$/\\n            <\\/ul>\\n            <\\/br><\\/br>\\n    <\\/body>\\n<\\/html>\\n/g}' > \$S_FP ; "
            alias mmmv_cre_HTML_ls_t6_recursive_partial_list_of_folders="S_FN=\"partial_recursive_list_of_folders.html\" ; $S_BASHALIASCODE_PART_1 $S_BASHALIASCODE_VERIFICATIONFREE_CORE $S_BASHALIASCODE_SUFFIX "
            #---------------
            # The grep regex with "xsl" at the next line
            alias mmmv_cre_txt_list_of_files_t2="S_FP=\"\`pwd\`/list_of_files.txt\" ; if [ ! -e \"\$S_FP\" ]; then find . -type f | grep -v -i -E '[.]par2' | grep -v -i -E '([.](css|js|xsl|dtd)|([0-9abcdef]{6}))\$' | grep -v '[/]par2_based_error_correction_files[/]' | sort  > \$S_FP ; sync ; wait ; chmod 0700 \$S_FP ; sync ; wait ; else echo \"\" ; echo \"A file or a folder with the path of \" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo -e \"\\e[31malready exists\\e[39m. Not overwriting it.\" ; echo \"\" ; fi "
            # has been tested to work on FreeBSD.
            #---------------
            if [ "$SB_SED_OR_GSED_EXISTS_ON_PATH" == "t" ]; then
                #---------------
                S_BASHALIASCODE_VERIFICATIONFREE_CORE=" find . -type f | grep -v -i -E '[.]par2' | grep -v -i -E '([.](css|js|xsl|dtd)|([0-9abcdef]{6}))\$' | grep -v '[/]par2_based_error_correction_files[/]' | sort | $S_CMD_GNU_SED -e 's/\\(^.\\+\$\\)/                <li><a href=\"\\1\">\\1<\\/a><\\/li>/g' | $S_CMD_GNU_SED -e '1{s/^/<!DOCTYPE HTML>\\n<html>\\n    <head>\\n        <title>Recursive list of Files with CSS, XSL, DTD and some Other Files Omitted<\\/title>\\n        <meta http-equiv=\"Content-Type\" content=\"text\\/html; charset=UTF-8\">\\n        <!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\\n    <\\/head>\\n    <body id=\"the_document_body\">\\n        <h1>List of Files<\\/h1>\\n            <ul>\\n/g}' | $S_CMD_GNU_SED -e '\${s/\$/\\n            <\\/ul>\\n            <\\/br><\\/br>\\n    <\\/body>\\n<\\/html>\\n/g}' > \$S_FP ; "
                alias mmmv_cre_HTML_ls_t7_recursive_list_of_files_without_css_js_xsl_dtd_extentionlesshex="S_FN=\"partial_recursive_list_of_files.html\" ; $S_BASHALIASCODE_PART_1 $S_BASHALIASCODE_VERIFICATIONFREE_CORE $S_BASHALIASCODE_SUFFIX "
                #------------------------------------------------------------------
                # The Ruby code below is for generating a grep sub-regex for
                # some of the mmmv_cre_HTML_ls_... aliases.
                #------------------------------------------------------------------
                # #!/usr/bin/env ruby
                #
                # def s_grep_subregex_from(ar_file_extentions=Array.new)
                #    #--------
                #    func_char_to_regex_chargroup=lambda do |s_char| # "a" -> "[aA]"; "2" -> "[2]"
                #       s_a0=s_char.downcase
                #       s_a1=s_char.upcase
                #       s_a2=nil
                #       if s_a0 != s_a1
                #          s_a2=("["+s_a0)+(s_a1+"]")
                #       else
                #          s_a2="["+s_a0+"]"
                #       end # if
                #       return s_a2
                #    end # func_char_to_regex_chargroup
                #    #--------
                #    rgx_0=/./
                #    func_file_extention_to_subregex=lambda do |s_file_extention| # "ps" -> "([pP][sS])"
                #       s_b0=s_file_extention.downcase
                #       ar_chars_0=s_b0.scan(rgx_0)
                #       i_len_ar_chars_0=ar_chars_0.size
                #       s_b1="("
                #       ix=nil
                #       i_len_ar_chars_0.times do |ix_char|
                #          s_b1<<(func_char_to_regex_chargroup.call(ar_chars_0[ix_char]))
                #       end # loop
                #       s_b1<<")"
                #       return s_b1
                #    end # func_file_extention_to_subregex
                #    #--------
                #    i_ar_file_extentions_len=ar_file_extentions.size
                #    s_extention=nil
                #    s_rgx=""
                #    i_ar_file_extentions_len.times do |ix_extention|
                #       s_extention=ar_file_extentions[ix_extention]
                #       s_rgx<<"|" if 0 < ix_extention
                #       s_rgx<<(func_file_extention_to_subregex.call(s_extention))
                #    end # loop
                #    return s_rgx
                # end # s_grep_subregex_from
                #
                # #--------
                # ar_0=Array.new
                # ar_1=Array.new
                # #--------
                # ar_1=ar_0.concat(["pdf","ps","dvi","epub","rtf","doc","docx","docxm","ods","odf","odt","ott"])
                # ar_0=ar_1.concat(["xls","xlsx","xlsm","xlt","xltx","ots"])
                # ar_1=ar_0.concat(["uot","uos","fodt","fods","dif","slk"])
                # ar_0=ar_1.concat(["txt","text","md","dot","dotx","csv","ini","config","toml","cfg","dbf"])
                # ar_1=ar_0.concat(["tex","ltx","latex"])
                # ar_0=ar_1.concat(["c","cpp","h","hpp","hcc","cxx","rs","asm"])
                # ar_1=ar_0.concat(["f","for","f90","f95","f03","f08"])
                # ar_0=ar_1.concat(["pas","pp"])
                # ar_1=ar_0.concat(["v","g","thy","lean","agda","sig","ml","pvs","prf","prl","elf"])
                # ar_0=ar_1.concat(["vh","sv","svh","vhd","vhdl","bsv"])
                # ar_1=ar_0.concat(["ada","adb","ads"])
                # ar_0=ar_1.concat(["lst","log"])
                # ar_1=ar_0.concat(["bash","bat","cmd","ps1","scr"])
                # ar_0=ar_1.concat(["rb","py","lisp","bas","pl","pm","dylan","lid","scala","hs","lhs"])
                # ar_1=ar_0.concat(["mp4","mp2","avi","mov","mpg","webm"])
                # ar_0=ar_1.concat(["mp3","weba","m4a","m4p","ogg","opus","oga","ova","flac","wav","wave","spx","mpc","mpp"])
                # ar_1=ar_0.concat(["webp","wep","jpeg","jpg","gif","bmp","avif","avifs","svg","png"])
                # ar_0=ar_1.concat(["djvu","djv"])
                # ar_1=ar_0.concat(["zip","jar","gz","tgz","xz","txz","bz2"])
                # ar_0=ar_1.concat(["tbz2","lz","tlz","rar","arj","7z","t7z","tar"])
                # #--------
                # #ar_0=["Rakefile","Makefile","configure"]
                # #--------
                # s_0=s_grep_subregex_from(ar_0)
                # #--------
                # puts(s_0)
                #
                #----------------------------------------------------------------------
                # TODO: fix a flaw/bug that if no PDF-files or other similar files are found,
                #       no HTML is generated by the Bash alias core code at the next line.
                S_BASHALIASCODE_VERIFICATIONFREE_CORE=" find . -type f | grep  -E '([.](([pP][dD][fF])|([pP][sS])|([dD][vV][iI])|([eE][pP][uU][bB])|([rR][tT][fF])|([dD][oO][cC])|([dD][oO][cC][xX])|([dD][oO][cC][xX][mM])|([oO][dD][sS])|([oO][dD][fF])|([oO][dD][tT])|([oO][tT][tT])|([xX][lL][sS])|([xX][lL][sS][xX])|([xX][lL][sS][mM])|([xX][lL][tT])|([xX][lL][tT][xX])|([oO][tT][sS])|([tT][xX][tT])))\$' | grep -v -E '[.][pP][aA][rR]2[.][lL][zZ]\$' | sort | $S_CMD_GNU_SED -e 's/\\(^.\\+\$\\)/                <li><a href=\"\\1\">\\1<\\/a><\\/li>/g' | $S_CMD_GNU_SED -e '1{s/^/<!DOCTYPE HTML>\\n<html>\\n    <head>\\n        <title>Recursive list of Files: PDF, PS, DOC, ODT, XLS and alike.<\\/title>\\n        <meta http-equiv=\"Content-Type\" content=\"text\\/html; charset=UTF-8\">\\n        <!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\\n    <\\/head>\\n    <body id=\"the_document_body\">\\n        <h1>Partial list of Files<\\/h1>\\n            <ul>\\n/g}' | $S_CMD_GNU_SED -e '\${s/\$/\\n            <\\/ul>\\n            <\\/br><\\/br>\\n    <\\/body>\\n<\\/html>\\n/g}' > \$S_FP ; sync ; wait ; chmod 0700 \$S_FP ; sync ; "
                alias mmmv_cre_HTML_ls_t8_recursive_list_of_files_like_doc_pdf_ps_xls_txt="S_FN=\"list_of_PDF_files_and_alike.html\" ; $S_BASHALIASCODE_PART_1 $S_BASHALIASCODE_VERIFICATIONFREE_CORE $S_BASHALIASCODE_SUFFIX "
                #---------------
                # TODO: the code at the next line has probably the same flaw/bug that the "..._ls_t8_..." has. Fix it.
                S_BASHALIASCODE_VERIFICATIONFREE_CORE=" find . -type f | grep  -E '([.](([pP][dD][fF])|([pP][sS])|([dD][vV][iI])|([eE][pP][uU][bB])|([rR][tT][fF])|([dD][oO][cC])|([dD][oO][cC][xX])|([dD][oO][cC][xX][mM])|([oO][dD][sS])|([oO][dD][fF])|([oO][dD][tT])|([oO][tT][tT])|([xX][lL][sS])|([xX][lL][sS][xX])|([xX][lL][sS][mM])|([xX][lL][tT])|([xX][lL][tT][xX])|([oO][tT][sS])|([uU][oO][tT])|([uU][oO][sS])|([fF][oO][dD][tT])|([fF][oO][dD][sS])|([dD][iI][fF])|([sS][lL][kK])|([tT][xX][tT])|([tT][eE][xX][tT])|([mM][dD])|([dD][oO][tT])|([dD][oO][tT][xX])|([cC][sS][vV])|([iI][nN][iI])|([cC][oO][nN][fF][iI][gG])|([tT][oO][mM][lL])|([cC][fF][gG])|([dD][bB][fF])|([bB][aA][sS][hH])|([bB][aA][tT])|([cC][mM][dD])|([pP][sS][1])|([sS][cC][rR])|([mM][pP][4])|([mM][pP][2])|([aA][vV][iI])|([mM][oO][vV])|([mM][pP][gG])|([wW][eE][bB][mM])|([mM][pP][3])|([wW][eE][bB][aA])|([mM][4][aA])|([mM][4][pP])|([oO][gG][gG])|([oO][pP][uU][sS])|([oO][gG][aA])|([oO][vV][aA])|([fF][lL][aA][cC])|([wW][aA][vV])|([wW][aA][vV][eE])|([sS][pP][xX])|([mM][pP][cC])|([mM][pP][pP])|([dD][jJ][vV][uU])|([dD][jJ][vV])|([zZ][iI][pP])|([jJ][aA][rR])|([gG][zZ])|([tT][gG][zZ])|([xX][zZ])|([tT][xX][zZ])|([bB][zZ][2])|([tT][bB][zZ][2])|([lL][zZ])|([tT][lL][zZ])|([rR][aA][rR])|([aA][rR][jJ])|([7][zZ])|([tT][7][zZ])|([tT][aA][rR])))\$' | grep -v -E '[.][pP][aA][rR]2[.][lL][zZ]\$' | sort | $S_CMD_GNU_SED -e 's/\\(^.\\+\$\\)/                <li><a href=\"\\1\">\\1<\\/a><\\/li>/g' | $S_CMD_GNU_SED -e '1{s/^/<!DOCTYPE HTML>\\n<html>\\n    <head>\\n        <title>Recursive list of Files: PDF, PS, DOC, ODT, XLS and alike.<\\/title>\\n        <meta http-equiv=\"Content-Type\" content=\"text\\/html; charset=UTF-8\">\\n        <!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\\n    <\\/head>\\n    <body id=\"the_document_body\">\\n        <h1>List of Files<\\/h1>\\n            <ul>\\n/g}' | $S_CMD_GNU_SED -e '\${s/\$/\\n            <\\/ul>\\n            <\\/br><\\/br>\\n    <\\/body>\\n<\\/html>\\n/g}' > \$S_FP ; "
                alias mmmv_cre_HTML_ls_t9_recursive_list_of_files_like_doc_pdf_ps_xls_txt_video_and_audio_and_compressed_container_files="S_FN=\"partial_recursive_list_of_files.html\" ; $S_BASHALIASCODE_PART_1 $S_BASHALIASCODE_VERIFICATIONFREE_CORE $S_BASHALIASCODE_SUFFIX "
                #------------------------------------------------------------------
                S_BASHALIASCODE_VERIFICATIONFREE_CORE=" find . -type f | grep  -E '((([rR][aA][kK][eE][fF][iI][lL][eE])|([mM][aA][kK][eE][fF][iI][lL][eE])|([cC][oO][nN][fF][iI][gG][uU][rR][eE]))|([.](([pP][dD][fF])|([pP][sS])|([dD][vV][iI])|([eE][pP][uU][bB])|([rR][tT][fF])|([dD][oO][cC])|([dD][oO][cC][xX])|([dD][oO][cC][xX][mM])|([oO][dD][sS])|([oO][dD][fF])|([oO][dD][tT])|([oO][tT][tT])|([xX][lL][sS])|([xX][lL][sS][xX])|([xX][lL][sS][mM])|([xX][lL][tT])|([xX][lL][tT][xX])|([oO][tT][sS])|([uU][oO][tT])|([uU][oO][sS])|([fF][oO][dD][tT])|([fF][oO][dD][sS])|([dD][iI][fF])|([sS][lL][kK])|([tT][xX][tT])|([tT][eE][xX][tT])|([mM][dD])|([dD][oO][tT])|([dD][oO][tT][xX])|([cC][sS][vV])|([iI][nN][iI])|([cC][oO][nN][fF][iI][gG])|([tT][oO][mM][lL])|([cC][fF][gG])|([dD][bB][fF])|([tT][eE][xX])|([lL][tT][xX])|([lL][aA][tT][eE][xX])|([cC])|([cC][pP][pP])|([hH])|([hH][pP][pP])|([hH][cC][cC])|([cC][xX][xX])|([rR][sS])|([aA][sS][mM])|([fF])|([fF][oO][rR])|([fF][9][0])|([fF][9][5])|([fF][0][3])|([fF][0][8])|([pP][aA][sS])|([pP][pP])|([vV])|([gG])|([tT][hH][yY])|([lL][eE][aA][nN])|([aA][gG][dD][aA])|([sS][iI][gG])|([mM][lL])|([pP][vV][sS])|([pP][rR][fF])|([pP][rR][lL])|([eE][lL][fF])|([vV][hH])|([sS][vV])|([sS][vV][hH])|([vV][hH][dD])|([vV][hH][dD][lL])|([bB][sS][vV])|([aA][dD][aA])|([aA][dD][bB])|([aA][dD][sS])|([lL][sS][tT])|([lL][oO][gG])|([bB][aA][sS][hH])|([bB][aA][tT])|([cC][mM][dD])|([pP][sS][1])|([sS][cC][rR])|([rR][bB])|([pP][yY])|([lL][iI][sS][pP])|([bB][aA][sS])|([pP][lL])|([pP][mM])|([dD][yY][lL][aA][nN])|([lL][iI][dD])|([sS][cC][aA][lL][aA])|([hH][sS])|([lL][hH][sS])|([mM][pP][4])|([mM][pP][2])|([aA][vV][iI])|([mM][oO][vV])|([mM][pP][gG])|([wW][eE][bB][mM])|([mM][pP][3])|([wW][eE][bB][aA])|([mM][4][aA])|([mM][4][pP])|([oO][gG][gG])|([oO][pP][uU][sS])|([oO][gG][aA])|([oO][vV][aA])|([fF][lL][aA][cC])|([wW][aA][vV])|([wW][aA][vV][eE])|([sS][pP][xX])|([mM][pP][cC])|([mM][pP][pP])|([wW][eE][bB][pP])|([wW][eE][pP])|([jJ][pP][eE][gG])|([jJ][pP][gG])|([gG][iI][fF])|([bB][mM][pP])|([aA][vV][iI][fF])|([aA][vV][iI][fF][sS])|([sS][vV][gG])|([pP][nN][gG])|([dD][jJ][vV][uU])|([dD][jJ][vV])|([zZ][iI][pP])|([jJ][aA][rR])|([gG][zZ])|([tT][gG][zZ])|([xX][zZ])|([tT][xX][zZ])|([bB][zZ][2])|([tT][bB][zZ][2])|([lL][zZ])|([tT][lL][zZ])|([rR][aA][rR])|([aA][rR][jJ])|([7][zZ])|([tT][7][zZ])|([tT][aA][rR]))))\$' | grep -v -E '[.][pP][aA][rR]2[.][lL][zZ]\$' | sort | $S_CMD_GNU_SED -e 's/\\(^.\\+\$\\)/                <li><a href=\"\\1\">\\1<\\/a><\\/li>/g' | $S_CMD_GNU_SED -e '1{s/^/<!DOCTYPE HTML>\\n<html>\\n    <head>\\n        <title>Recursive list of Files: PDF, XLS, MP4, JPEG, ZIP and alike.<\\/title>\\n        <meta http-equiv=\"Content-Type\" content=\"text\\/html; charset=UTF-8\">\\n        <!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\\n    <\\/head>\\n    <body id=\"the_document_body\">\\n        <h1>Partial list of Files<\\/h1>\\n            <ul>\\n/g}' | $S_CMD_GNU_SED -e '\${s/\$/\\n            <\\/ul>\\n            <\\/br><\\/br>\\n    <\\/body>\\n<\\/html>\\n/g}' > \$S_FP ; "
                alias mmmv_cre_HTML_ls_t10_recursive_list_of_files_like_doc_pdf_ps_xls_txt_src_video_and_audio_and_image_and_compressed_container_files="S_FN=\"partial_recursive_list_of_files.html\" ; $S_BASHALIASCODE_PART_1 $S_BASHALIASCODE_VERIFICATIONFREE_CORE $S_BASHALIASCODE_SUFFIX "
                #---------------
                S_BASHALIASCODE_VERIFICATIONFREE_CORE=" find . -type f | grep -E '[.][zZ][iI][pP]\$' | sort | $S_CMD_GNU_SED -e 's/\\(^.\\+\$\\)/                <li><a href=\"\\1%23\\/\">\\1%23\\/<\\/a><\\/li>/g' | $S_CMD_GNU_SED -e '1{s/^/<!DOCTYPE HTML>\\n<html>\\n    <head>\\n        <title>AVFS Specific Redirection Links<\\/title>\\n        <meta http-equiv=\"Content-Type\" content=\"text\\/html; charset=UTF-8\">\\n        <!-- MMMV_TAG_THIS_FILE_HAS_BEEN_AUTOGENERATED_T1 -->\\n    <\\/head>\\n    <body id=\"the_document_body\">\\n        <h1><a href=\"http:\\/\\/web.archive.org\\/web\\/20250406065812\\/https:\\/\\/avf.sourceforge.net\\/\">AVFS<\\/a> Specific Redirection Links<\\/h1>\\n            <ul>\\n/g}' | $S_CMD_GNU_SED -e '\${s/\$/\\n            <\\/ul>\\n            <\\/br><\\/br>\\n    <\\/body>\\n<\\/html>\\n/g}' > \$S_FP ; "
                alias mmmv_cre_HTML_ls_t11_AVFS_specific_redirection_to_zip_files="S_FN=\"AVFS_specific_redirection.html\" ; $S_BASHALIASCODE_PART_1 $S_BASHALIASCODE_VERIFICATIONFREE_CORE $S_BASHALIASCODE_SUFFIX "
            fi
            #---------------
        fi
        #------------------------------------------------------------------
        if [ "$SB_OPERATINGSYSTEM_LINUX" == "t" ]; then
            alias mmmv_cre_txt_list_of_named_pipes_t1="S_FP=\"\`pwd\`/list_of_named_pipes.txt\" ; if [ ! -e \"\$S_FP\" ]; then find . -type p | sort  > \$S_FP ; sync ; wait ; chmod 0700 \$S_FP ; sync ; wait ; else echo \"\" ; echo \"A file or a folder with the path of \" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo -e \"\\e[31malready exists\\e[39m. Not overwriting it.\" ; echo \"\" ; fi "
            alias mmmv_cre_txt_list_of_socketfiles_t1="S_FP=\"\`pwd\`/list_of_socketfiles.txt\" ; if [ ! -e \"\$S_FP\" ]; then find . -type s | sort  > \$S_FP ; sync ; wait ; chmod 0700 \$S_FP ; sync ; wait ; else echo \"\" ; echo \"A file or a folder with the path of \" ; echo \"\" ; echo \"    \$S_FP\" ; echo \"\" ; echo -e \"\\e[31malready exists\\e[39m. Not overwriting it.\" ; echo \"\" ; fi "
        fi
        #------------------------------------------------------------------
    fi
fi
#==========================================================================
# S_VERSION_OF_THIS_FILE="3b805865-b48b-4b7d-b256-3010a021a9e7"
#==========================================================================
