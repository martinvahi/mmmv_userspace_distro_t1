#!/usr/bin/env bash
#==========================================================================
# Initial author of this file: Martin.Vahi@softf1.com
# This file is in public domain.
# The following line is a spdx.org license label line:
# SPDX-License-Identifier: 0BSD
#
# The code in this file is meant to be part of the $HOME/.bashrc .
# It has been tested to work on 2023_05_xx Windows10 version of the
# Windows Subsystem for Linux (WSL), on an onld openSUSE Linux.
# If xclip is installed on BSD, then it MIGHT also work on BSD, but
# the current version HAS NOT been tested on BSD.
#
# List of dependencies described partly in EBNF style: 
#     bc, grep, cat, uuid, uname, wait,
#     bash, par/par_text_formatter, (sed|gsed), nice, 
#     echo, rm, tr, wc, ( xclip | ( clip.exe,powershell.exe ) )
# 
#==========================================================================
S_FP_DIR_TMP_0="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )" 
if [ "$MMMV_USERSPACE_DISTRO_T1_HOME" == "" ]; then
    MMMV_USERSPACE_DISTRO_T1_HOME="`cd $S_FP_DIR_TMP_0/../../../; pwd`"
fi
#--------------------------------------------------------------------------

if [ "$MMMV_USERSPACE_DISTRO_T1_BASHRC_PREFIX_LOAD_MODE_T1" != "mode_ok_to_load" ]; then
    S_ERR_CODE="1"
    echo ""
    echo "This script is expected to be a sub-part of the "
    #--------------------
    #echo "/home/mmmv/mmmv_userspace_distro_t1/mmmv/etc/common_bashrc/common_bashrc_main.bash"
    echo "$MMMV_USERSPACE_DISTRO_T1_HOME/mmmv/etc/common_bashrc/common_bashrc_main.bash"
    #--------------------
    if [ "$MMMV_USERSPACE_DISTRO_T1_BASHRC_PREFIX_LOAD_MODE_T1" != "" ]; then
        echo ""
        echo "    MMMV_USERSPACE_DISTRO_T1_BASHRC_PREFIX_LOAD_MODE_T1==$MMMV_USERSPACE_DISTRO_T1_BASHRC_PREFIX_LOAD_MODE_T1"
        echo ""
    fi
    echo -e "\e[31mExiting with an error code $S_ERR_CODE\e[39m ."
    echo "GUID=='635c2184-3510-4d3b-b34b-507331b157e7'"
    echo ""
    exit $S_ERR_CODE # exit with an error
fi

#--------------------------------------------------------------------------

alias mmmv_clipboard_text_2_replyquote_32_t1=" S_FP_TMP_RAMPARTITION_OR_HDD=\"/tmp\" ; wait ; S_CMD_GNU_SED=\"sed\" ; if [ \"\`uname -a | grep -i 'BSD' \`\" != '' ]; then S_CMD_GNU_SED=\"gsed\" ; fi ; wait ; S_CMD_CLIPBOARD_2_FILE=\"xclip -out \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"xclip -selection c -in \" ; wait ; if [ \"\`uname -a | grep -i 'Microsoft' \`\" != '' ]; then echo '' > /dev/null ; wait ; S_CMD_CLIPBOARD_2_FILE=\"powershell.exe -c Get-Clipboard \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"clip.exe \" ; wait ; fi ; wait ; S_FN_SUFFIX=\"\`uuid | \$S_CMD_GNU_SED -e 's/-//g'\`.txt\" ; wait ; S_FP_TMP_0=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_0_\$S_FN_SUFFIX\" ; wait ; S_FP_TMP_1=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_1_\$S_FN_SUFFIX\" ; wait ; nice -n 2 \$S_CMD_CLIPBOARD_2_FILE | \$S_CMD_GNU_SED -e 's/[\\r][\\n]/\\n/g' | \$S_CMD_GNU_SED -e 's/[\\r]/\\n/g' | \$S_CMD_GNU_SED -e 's/^[[:blank:]]\+//g' | \$S_CMD_GNU_SED -e 's/[[:blank:]]\+/ /g' > \$S_FP_TMP_0 ; wait ; SI_LINECOUNT=\"\`wc -l \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e 's/[[:blank:]].\+//g' | \$S_CMD_GNU_SED -e 's/\$/+1/' | bc | tr -d '\\n' \`\" ; wait ; SI_ITERATIONCOUNT=\"\$SI_LINECOUNT\" ; wait ; for ((i = 0; i < \$SI_ITERATIONCOUNT ; i++)) do echo '' > /dev/null ; wait ; cat \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e  '1{/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_0 ; wait ; done ; wait ; echo \"\" >  \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_0 | par_text_formatter 30 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e 's/^/> /g' >> \$S_FP_TMP_1 ; wait ; echo \"\" >> \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_FILE_2_CLIPBOARD ; wait ; rm -f \$S_FP_TMP_0 ; wait ; rm -f \$S_FP_TMP_1 ; wait ; "

alias mmmv_clipboard_text_2_replyquote_42_t1=" S_FP_TMP_RAMPARTITION_OR_HDD=\"/tmp\" ; wait ; S_CMD_GNU_SED=\"sed\" ; if [ \"\`uname -a | grep -i 'BSD' \`\" != '' ]; then S_CMD_GNU_SED=\"gsed\" ; fi ; wait ; S_CMD_CLIPBOARD_2_FILE=\"xclip -out \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"xclip -selection c -in \" ; wait ; if [ \"\`uname -a | grep -i 'Microsoft' \`\" != '' ]; then echo '' > /dev/null ; wait ; S_CMD_CLIPBOARD_2_FILE=\"powershell.exe -c Get-Clipboard \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"clip.exe \" ; wait ; fi ; wait ; S_FN_SUFFIX=\"\`uuid | \$S_CMD_GNU_SED -e 's/-//g'\`.txt\" ; wait ; S_FP_TMP_0=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_0_\$S_FN_SUFFIX\" ; wait ; S_FP_TMP_1=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_1_\$S_FN_SUFFIX\" ; wait ; nice -n 2 \$S_CMD_CLIPBOARD_2_FILE | \$S_CMD_GNU_SED -e 's/[\\r][\\n]/\\n/g' | \$S_CMD_GNU_SED -e 's/[\\r]/\\n/g' | \$S_CMD_GNU_SED -e 's/^[[:blank:]]\+//g' | \$S_CMD_GNU_SED -e 's/[[:blank:]]\+/ /g' > \$S_FP_TMP_0 ; wait ; SI_LINECOUNT=\"\`wc -l \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e 's/[[:blank:]].\+//g' | \$S_CMD_GNU_SED -e 's/\$/+1/' | bc | tr -d '\\n' \`\" ; wait ; SI_ITERATIONCOUNT=\"\$SI_LINECOUNT\" ; wait ; for ((i = 0; i < \$SI_ITERATIONCOUNT ; i++)) do echo '' > /dev/null ; wait ; cat \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e  '1{/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_0 ; wait ; done ; wait ; echo \"\" >  \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_0 | par_text_formatter 40 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e 's/^/> /g' >> \$S_FP_TMP_1 ; wait ; echo \"\" >> \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_FILE_2_CLIPBOARD ; wait ; rm -f \$S_FP_TMP_0 ; wait ; rm -f \$S_FP_TMP_1 ; wait ; "

alias mmmv_clipboard_text_2_replyquote_52_t1=" S_FP_TMP_RAMPARTITION_OR_HDD=\"/tmp\" ; wait ; S_CMD_GNU_SED=\"sed\" ; if [ \"\`uname -a | grep -i 'BSD' \`\" != '' ]; then S_CMD_GNU_SED=\"gsed\" ; fi ; wait ; S_CMD_CLIPBOARD_2_FILE=\"xclip -out \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"xclip -selection c -in \" ; wait ; if [ \"\`uname -a | grep -i 'Microsoft' \`\" != '' ]; then echo '' > /dev/null ; wait ; S_CMD_CLIPBOARD_2_FILE=\"powershell.exe -c Get-Clipboard \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"clip.exe \" ; wait ; fi ; wait ; S_FN_SUFFIX=\"\`uuid | \$S_CMD_GNU_SED -e 's/-//g'\`.txt\" ; wait ; S_FP_TMP_0=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_0_\$S_FN_SUFFIX\" ; wait ; S_FP_TMP_1=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_1_\$S_FN_SUFFIX\" ; wait ; nice -n 2 \$S_CMD_CLIPBOARD_2_FILE | \$S_CMD_GNU_SED -e 's/[\\r][\\n]/\\n/g' | \$S_CMD_GNU_SED -e 's/[\\r]/\\n/g' | \$S_CMD_GNU_SED -e 's/^[[:blank:]]\+//g' | \$S_CMD_GNU_SED -e 's/[[:blank:]]\+/ /g' > \$S_FP_TMP_0 ; wait ; SI_LINECOUNT=\"\`wc -l \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e 's/[[:blank:]].\+//g' | \$S_CMD_GNU_SED -e 's/\$/+1/' | bc | tr -d '\\n' \`\" ; wait ; SI_ITERATIONCOUNT=\"\$SI_LINECOUNT\" ; wait ; for ((i = 0; i < \$SI_ITERATIONCOUNT ; i++)) do echo '' > /dev/null ; wait ; cat \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e  '1{/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_0 ; wait ; done ; wait ; echo \"\" >  \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_0 | par_text_formatter 50 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e 's/^/> /g' >> \$S_FP_TMP_1 ; wait ; echo \"\" >> \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_FILE_2_CLIPBOARD ; wait ; rm -f \$S_FP_TMP_0 ; wait ; rm -f \$S_FP_TMP_1 ; wait ; "

alias mmmv_clipboard_text_2_replyquote_62_t1=" S_FP_TMP_RAMPARTITION_OR_HDD=\"/tmp\" ; wait ; S_CMD_GNU_SED=\"sed\" ; if [ \"\`uname -a | grep -i 'BSD' \`\" != '' ]; then S_CMD_GNU_SED=\"gsed\" ; fi ; wait ; S_CMD_CLIPBOARD_2_FILE=\"xclip -out \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"xclip -selection c -in \" ; wait ; if [ \"\`uname -a | grep -i 'Microsoft' \`\" != '' ]; then echo '' > /dev/null ; wait ; S_CMD_CLIPBOARD_2_FILE=\"powershell.exe -c Get-Clipboard \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"clip.exe \" ; wait ; fi ; wait ; S_FN_SUFFIX=\"\`uuid | \$S_CMD_GNU_SED -e 's/-//g'\`.txt\" ; wait ; S_FP_TMP_0=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_0_\$S_FN_SUFFIX\" ; wait ; S_FP_TMP_1=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_1_\$S_FN_SUFFIX\" ; wait ; nice -n 2 \$S_CMD_CLIPBOARD_2_FILE | \$S_CMD_GNU_SED -e 's/[\\r][\\n]/\\n/g' | \$S_CMD_GNU_SED -e 's/[\\r]/\\n/g' | \$S_CMD_GNU_SED -e 's/^[[:blank:]]\+//g' | \$S_CMD_GNU_SED -e 's/[[:blank:]]\+/ /g' > \$S_FP_TMP_0 ; wait ; SI_LINECOUNT=\"\`wc -l \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e 's/[[:blank:]].\+//g' | \$S_CMD_GNU_SED -e 's/\$/+1/' | bc | tr -d '\\n' \`\" ; wait ; SI_ITERATIONCOUNT=\"\$SI_LINECOUNT\" ; wait ; for ((i = 0; i < \$SI_ITERATIONCOUNT ; i++)) do echo '' > /dev/null ; wait ; cat \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e  '1{/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_0 ; wait ; done ; wait ; echo \"\" >  \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_0 | par_text_formatter 60 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e 's/^/> /g' >> \$S_FP_TMP_1 ; wait ; echo \"\" >> \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_FILE_2_CLIPBOARD ; wait ; rm -f \$S_FP_TMP_0 ; wait ; rm -f \$S_FP_TMP_1 ; wait ; "

alias mmmv_clipboard_text_2_replyquote_72_t1=" S_FP_TMP_RAMPARTITION_OR_HDD=\"/tmp\" ; wait ; S_CMD_GNU_SED=\"sed\" ; if [ \"\`uname -a | grep -i 'BSD' \`\" != '' ]; then S_CMD_GNU_SED=\"gsed\" ; fi ; wait ; S_CMD_CLIPBOARD_2_FILE=\"xclip -out \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"xclip -selection c -in \" ; wait ; if [ \"\`uname -a | grep -i 'Microsoft' \`\" != '' ]; then echo '' > /dev/null ; wait ; S_CMD_CLIPBOARD_2_FILE=\"powershell.exe -c Get-Clipboard \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"clip.exe \" ; wait ; fi ; wait ; S_FN_SUFFIX=\"\`uuid | \$S_CMD_GNU_SED -e 's/-//g'\`.txt\" ; wait ; S_FP_TMP_0=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_0_\$S_FN_SUFFIX\" ; wait ; S_FP_TMP_1=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_1_\$S_FN_SUFFIX\" ; wait ; nice -n 2 \$S_CMD_CLIPBOARD_2_FILE | \$S_CMD_GNU_SED -e 's/[\\r][\\n]/\\n/g' | \$S_CMD_GNU_SED -e 's/[\\r]/\\n/g' | \$S_CMD_GNU_SED -e 's/^[[:blank:]]\+//g' | \$S_CMD_GNU_SED -e 's/[[:blank:]]\+/ /g' > \$S_FP_TMP_0 ; wait ; SI_LINECOUNT=\"\`wc -l \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e 's/[[:blank:]].\+//g' | \$S_CMD_GNU_SED -e 's/\$/+1/' | bc | tr -d '\\n' \`\" ; wait ; SI_ITERATIONCOUNT=\"\$SI_LINECOUNT\" ; wait ; for ((i = 0; i < \$SI_ITERATIONCOUNT ; i++)) do echo '' > /dev/null ; wait ; cat \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e  '1{/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_0 ; wait ; done ; wait ; echo \"\" >  \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_0 | par_text_formatter 70 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e 's/^/> /g' >> \$S_FP_TMP_1 ; wait ; echo \"\" >> \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_FILE_2_CLIPBOARD ; wait ; rm -f \$S_FP_TMP_0 ; wait ; rm -f \$S_FP_TMP_1 ; wait ; "

#--------------------------------------------------------------------------

alias mmmv_clipboard_text_2_lines_with_max_width_of_32_t1=" S_FP_TMP_RAMPARTITION_OR_HDD=\"/tmp\" ; wait ; S_CMD_GNU_SED=\"sed\" ; if [ \"\`uname -a | grep -i 'BSD' \`\" != '' ]; then S_CMD_GNU_SED=\"gsed\" ; fi ; wait ; S_CMD_CLIPBOARD_2_FILE=\"xclip -out \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"xclip -selection c -in \" ; wait ; if [ \"\`uname -a | grep -i 'Microsoft' \`\" != '' ]; then echo '' > /dev/null ; wait ; S_CMD_CLIPBOARD_2_FILE=\"powershell.exe -c Get-Clipboard \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"clip.exe \" ; wait ; fi ; wait ; S_FN_SUFFIX=\"\`uuid | \$S_CMD_GNU_SED -e 's/-//g'\`.txt\" ; wait ; S_FP_TMP_0=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_0_\$S_FN_SUFFIX\" ; wait ; S_FP_TMP_1=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_1_\$S_FN_SUFFIX\" ; wait ; nice -n 2 \$S_CMD_CLIPBOARD_2_FILE | \$S_CMD_GNU_SED -e 's/[\\r][\\n]/\\n/g' | \$S_CMD_GNU_SED -e 's/[\\r]/\\n/g' | \$S_CMD_GNU_SED -e 's/^[[:blank:]]\+//g' | \$S_CMD_GNU_SED -e 's/[[:blank:]]\+/ /g' > \$S_FP_TMP_0 ; wait ; SI_LINECOUNT=\"\`wc -l \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e 's/[[:blank:]].\+//g' | \$S_CMD_GNU_SED -e 's/\$/+1/' | bc | tr -d '\\n' \`\" ; wait ; SI_ITERATIONCOUNT=\"\$SI_LINECOUNT\" ; wait ; for ((i = 0; i < \$SI_ITERATIONCOUNT ; i++)) do echo '' > /dev/null ; wait ; cat \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e  '1{/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_0 ; wait ; done ; wait ; echo \"\" >  \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_0 | par_text_formatter 30 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' >> \$S_FP_TMP_1 ; wait ; echo \"\" >> \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_FILE_2_CLIPBOARD ; wait ; rm -f \$S_FP_TMP_0 ; wait ; rm -f \$S_FP_TMP_1 ; wait ; "


alias mmmv_clipboard_text_2_lines_with_max_width_of_42_t1=" S_FP_TMP_RAMPARTITION_OR_HDD=\"/tmp\" ; wait ; S_CMD_GNU_SED=\"sed\" ; if [ \"\`uname -a | grep -i 'BSD' \`\" != '' ]; then S_CMD_GNU_SED=\"gsed\" ; fi ; wait ; S_CMD_CLIPBOARD_2_FILE=\"xclip -out \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"xclip -selection c -in \" ; wait ; if [ \"\`uname -a | grep -i 'Microsoft' \`\" != '' ]; then echo '' > /dev/null ; wait ; S_CMD_CLIPBOARD_2_FILE=\"powershell.exe -c Get-Clipboard \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"clip.exe \" ; wait ; fi ; wait ; S_FN_SUFFIX=\"\`uuid | \$S_CMD_GNU_SED -e 's/-//g'\`.txt\" ; wait ; S_FP_TMP_0=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_0_\$S_FN_SUFFIX\" ; wait ; S_FP_TMP_1=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_1_\$S_FN_SUFFIX\" ; wait ; nice -n 2 \$S_CMD_CLIPBOARD_2_FILE | \$S_CMD_GNU_SED -e 's/[\\r][\\n]/\\n/g' | \$S_CMD_GNU_SED -e 's/[\\r]/\\n/g' | \$S_CMD_GNU_SED -e 's/^[[:blank:]]\+//g' | \$S_CMD_GNU_SED -e 's/[[:blank:]]\+/ /g' > \$S_FP_TMP_0 ; wait ; SI_LINECOUNT=\"\`wc -l \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e 's/[[:blank:]].\+//g' | \$S_CMD_GNU_SED -e 's/\$/+1/' | bc | tr -d '\\n' \`\" ; wait ; SI_ITERATIONCOUNT=\"\$SI_LINECOUNT\" ; wait ; for ((i = 0; i < \$SI_ITERATIONCOUNT ; i++)) do echo '' > /dev/null ; wait ; cat \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e  '1{/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_0 ; wait ; done ; wait ; echo \"\" >  \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_0 | par_text_formatter 40 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' >> \$S_FP_TMP_1 ; wait ; echo \"\" >> \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_FILE_2_CLIPBOARD ; wait ; rm -f \$S_FP_TMP_0 ; wait ; rm -f \$S_FP_TMP_1 ; wait ; "


alias mmmv_clipboard_text_2_lines_with_max_width_of_52_t1=" S_FP_TMP_RAMPARTITION_OR_HDD=\"/tmp\" ; wait ; S_CMD_GNU_SED=\"sed\" ; if [ \"\`uname -a | grep -i 'BSD' \`\" != '' ]; then S_CMD_GNU_SED=\"gsed\" ; fi ; wait ; S_CMD_CLIPBOARD_2_FILE=\"xclip -out \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"xclip -selection c -in \" ; wait ; if [ \"\`uname -a | grep -i 'Microsoft' \`\" != '' ]; then echo '' > /dev/null ; wait ; S_CMD_CLIPBOARD_2_FILE=\"powershell.exe -c Get-Clipboard \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"clip.exe \" ; wait ; fi ; wait ; S_FN_SUFFIX=\"\`uuid | \$S_CMD_GNU_SED -e 's/-//g'\`.txt\" ; wait ; S_FP_TMP_0=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_0_\$S_FN_SUFFIX\" ; wait ; S_FP_TMP_1=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_1_\$S_FN_SUFFIX\" ; wait ; nice -n 2 \$S_CMD_CLIPBOARD_2_FILE | \$S_CMD_GNU_SED -e 's/[\\r][\\n]/\\n/g' | \$S_CMD_GNU_SED -e 's/[\\r]/\\n/g' | \$S_CMD_GNU_SED -e 's/^[[:blank:]]\+//g' | \$S_CMD_GNU_SED -e 's/[[:blank:]]\+/ /g' > \$S_FP_TMP_0 ; wait ; SI_LINECOUNT=\"\`wc -l \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e 's/[[:blank:]].\+//g' | \$S_CMD_GNU_SED -e 's/\$/+1/' | bc | tr -d '\\n' \`\" ; wait ; SI_ITERATIONCOUNT=\"\$SI_LINECOUNT\" ; wait ; for ((i = 0; i < \$SI_ITERATIONCOUNT ; i++)) do echo '' > /dev/null ; wait ; cat \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e  '1{/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_0 ; wait ; done ; wait ; echo \"\" >  \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_0 | par_text_formatter 50 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' >> \$S_FP_TMP_1 ; wait ; echo \"\" >> \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_FILE_2_CLIPBOARD ; wait ; rm -f \$S_FP_TMP_0 ; wait ; rm -f \$S_FP_TMP_1 ; wait ; "


alias mmmv_clipboard_text_2_lines_with_max_width_of_62_t1=" S_FP_TMP_RAMPARTITION_OR_HDD=\"/tmp\" ; wait ; S_CMD_GNU_SED=\"sed\" ; if [ \"\`uname -a | grep -i 'BSD' \`\" != '' ]; then S_CMD_GNU_SED=\"gsed\" ; fi ; wait ; S_CMD_CLIPBOARD_2_FILE=\"xclip -out \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"xclip -selection c -in \" ; wait ; if [ \"\`uname -a | grep -i 'Microsoft' \`\" != '' ]; then echo '' > /dev/null ; wait ; S_CMD_CLIPBOARD_2_FILE=\"powershell.exe -c Get-Clipboard \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"clip.exe \" ; wait ; fi ; wait ; S_FN_SUFFIX=\"\`uuid | \$S_CMD_GNU_SED -e 's/-//g'\`.txt\" ; wait ; S_FP_TMP_0=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_0_\$S_FN_SUFFIX\" ; wait ; S_FP_TMP_1=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_1_\$S_FN_SUFFIX\" ; wait ; nice -n 2 \$S_CMD_CLIPBOARD_2_FILE | \$S_CMD_GNU_SED -e 's/[\\r][\\n]/\\n/g' | \$S_CMD_GNU_SED -e 's/[\\r]/\\n/g' | \$S_CMD_GNU_SED -e 's/^[[:blank:]]\+//g' | \$S_CMD_GNU_SED -e 's/[[:blank:]]\+/ /g' > \$S_FP_TMP_0 ; wait ; SI_LINECOUNT=\"\`wc -l \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e 's/[[:blank:]].\+//g' | \$S_CMD_GNU_SED -e 's/\$/+1/' | bc | tr -d '\\n' \`\" ; wait ; SI_ITERATIONCOUNT=\"\$SI_LINECOUNT\" ; wait ; for ((i = 0; i < \$SI_ITERATIONCOUNT ; i++)) do echo '' > /dev/null ; wait ; cat \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e  '1{/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_0 ; wait ; done ; wait ; echo \"\" >  \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_0 | par_text_formatter 60 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' >> \$S_FP_TMP_1 ; wait ; echo \"\" >> \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_FILE_2_CLIPBOARD ; wait ; rm -f \$S_FP_TMP_0 ; wait ; rm -f \$S_FP_TMP_1 ; wait ; "

alias mmmv_clipboard_text_2_lines_with_max_width_of_72_t1=" S_FP_TMP_RAMPARTITION_OR_HDD=\"/tmp\" ; wait ; S_CMD_GNU_SED=\"sed\" ; if [ \"\`uname -a | grep -i 'BSD' \`\" != '' ]; then S_CMD_GNU_SED=\"gsed\" ; fi ; wait ; S_CMD_CLIPBOARD_2_FILE=\"xclip -out \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"xclip -selection c -in \" ; wait ; if [ \"\`uname -a | grep -i 'Microsoft' \`\" != '' ]; then echo '' > /dev/null ; wait ; S_CMD_CLIPBOARD_2_FILE=\"powershell.exe -c Get-Clipboard \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"clip.exe \" ; wait ; fi ; wait ; S_FN_SUFFIX=\"\`uuid | \$S_CMD_GNU_SED -e 's/-//g'\`.txt\" ; wait ; S_FP_TMP_0=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_0_\$S_FN_SUFFIX\" ; wait ; S_FP_TMP_1=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_1_\$S_FN_SUFFIX\" ; wait ; nice -n 2 \$S_CMD_CLIPBOARD_2_FILE | \$S_CMD_GNU_SED -e 's/[\\r][\\n]/\\n/g' | \$S_CMD_GNU_SED -e 's/[\\r]/\\n/g' | \$S_CMD_GNU_SED -e 's/^[[:blank:]]\+//g' | \$S_CMD_GNU_SED -e 's/[[:blank:]]\+/ /g' > \$S_FP_TMP_0 ; wait ; SI_LINECOUNT=\"\`wc -l \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e 's/[[:blank:]].\+//g' | \$S_CMD_GNU_SED -e 's/\$/+1/' | bc | tr -d '\\n' \`\" ; wait ; SI_ITERATIONCOUNT=\"\$SI_LINECOUNT\" ; wait ; for ((i = 0; i < \$SI_ITERATIONCOUNT ; i++)) do echo '' > /dev/null ; wait ; cat \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e  '1{/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_0 ; wait ; done ; wait ; echo \"\" >  \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_0 | par_text_formatter 70 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' >> \$S_FP_TMP_1 ; wait ; echo \"\" >> \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_FILE_2_CLIPBOARD ; wait ; rm -f \$S_FP_TMP_0 ; wait ; rm -f \$S_FP_TMP_1 ; wait ; "


alias mmmv_clipboard_text_2_lines_with_max_width_of_80_t1=" S_FP_TMP_RAMPARTITION_OR_HDD=\"/tmp\" ; wait ; S_CMD_GNU_SED=\"sed\" ; if [ \"\`uname -a | grep -i 'BSD' \`\" != '' ]; then S_CMD_GNU_SED=\"gsed\" ; fi ; wait ; S_CMD_CLIPBOARD_2_FILE=\"xclip -out \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"xclip -selection c -in \" ; wait ; if [ \"\`uname -a | grep -i 'Microsoft' \`\" != '' ]; then echo '' > /dev/null ; wait ; S_CMD_CLIPBOARD_2_FILE=\"powershell.exe -c Get-Clipboard \" ; wait ; S_CMD_FILE_2_CLIPBOARD=\"clip.exe \" ; wait ; fi ; wait ; S_FN_SUFFIX=\"\`uuid | \$S_CMD_GNU_SED -e 's/-//g'\`.txt\" ; wait ; S_FP_TMP_0=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_0_\$S_FN_SUFFIX\" ; wait ; S_FP_TMP_1=\"\$S_FP_TMP_RAMPARTITION_OR_HDD/tmp_1_\$S_FN_SUFFIX\" ; wait ; nice -n 2 \$S_CMD_CLIPBOARD_2_FILE | \$S_CMD_GNU_SED -e 's/[\\r][\\n]/\\n/g' | \$S_CMD_GNU_SED -e 's/[\\r]/\\n/g' | \$S_CMD_GNU_SED -e 's/^[[:blank:]]\+//g' | \$S_CMD_GNU_SED -e 's/[[:blank:]]\+/ /g' > \$S_FP_TMP_0 ; wait ; SI_LINECOUNT=\"\`wc -l \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e 's/[[:blank:]].\+//g' | \$S_CMD_GNU_SED -e 's/\$/+1/' | bc | tr -d '\\n' \`\" ; wait ; SI_ITERATIONCOUNT=\"\$SI_LINECOUNT\" ; wait ; for ((i = 0; i < \$SI_ITERATIONCOUNT ; i++)) do echo '' > /dev/null ; wait ; cat \$S_FP_TMP_0 | \$S_CMD_GNU_SED -e  '1{/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' > \$S_FP_TMP_0 ; wait ; done ; wait ; echo \"\" >  \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_0 | par_text_formatter 78 | \$S_CMD_GNU_SED -e '\${/^[[:blank:]]*\$/d}' >> \$S_FP_TMP_1 ; wait ; echo \"\" >> \$S_FP_TMP_1 ; wait ; cat \$S_FP_TMP_1 | \$S_CMD_FILE_2_CLIPBOARD ; wait ; rm -f \$S_FP_TMP_0 ; wait ; rm -f \$S_FP_TMP_1 ; wait ; "

#==========================================================================
# Thank You for studying this script :-)
#--------------------------------------------------------------------------
# S_VERSION_OF_THIS_FILE="2a2d8c2d-3231-4c1d-a0ab-507331b157e7"
#========================================================================== 
